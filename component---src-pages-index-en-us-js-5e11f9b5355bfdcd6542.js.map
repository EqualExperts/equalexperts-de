{"version":3,"sources":["webpack:///./src/components/header.en-US.js","webpack:///./src/components/contacts_layout.js","webpack:///./src/components/contacts.en-US.js","webpack:///./src/components/clients_layout.js","webpack:///./src/components/roles_layout.js","webpack:///./src/components/layout.en-US.js","webpack:///./src/components/clients.en-US.js","webpack:///./src/pages/index.en-US.js","webpack:///./src/components/footer.en-US.js"],"names":["HeaderDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","navLinks","allContentfulMainNav","edges","node","navItems","switcherLinks","Clients","props","className","contactCopy","contactIntroductionTitle","contactIntroduction","json","content","map","item","key","value","style","backgroundImage","contactBackgroundImage","file","href","contactSectionHeading","name","id","officeLocations","city","region","tel","email","Contact","allContentfulContactModule","allContentfulOfficeLocation","reverse","title","clientData","src","alt","Roles","rolesIntroContent","rolesTitle","rolesIntroduction","roles","role","uri","encodeURI","roleLink","roleTitle","image","roleImage","LayoutDe","children","allContentfulClientsModule","logos","IndexPage","render","data","this","heroModule","allContentfulHeroModule","textModule","allContentfulModuleTextOnly","heroImage","module","headingParts","heroHeading","split","dangerouslySetInnerHTML","__html","childContentfulModuleTextOnlyContentRichTextNode","childContentfulRichText","html","componentDidMount","hash","setTimeout","decodeURI","replace","element","document","getElementById","scrollIntoView","React","Component","pageQuery","FooterUS","legalLinks","allContentfulLegalNav"],"mappings":"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","file":"component---src-pages-index-en-us-js-5e11f9b5355bfdcd6542.js","sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport { getCurrentLangKey } from \"ptz-i18n\"\nimport HeaderLayout from \"./header_layout\"\n\nconst HeaderDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n    query headerEn {\n      allContentfulMainNav(filter: { node_locale: { eq: \"en-US\" } }) {\n        edges {\n          node {\n            navItems {\n              navItemText\n              navItemUrl\n            }\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          title\n          description\n          languages {\n            defaultLangKey\n            langs\n          }\n        }\n      }\n    }\n  `)\n  const url = typeof window !== \"undefined\" ? window.location.pathname : \"\"\n  const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages\n  const langKey = getCurrentLangKey(langs, defaultLangKey, url)\n  const homeLink = langKey === defaultLangKey ? \"\" : `/${langKey}/`\n\n  return (\n    <HeaderLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    ></HeaderLayout>\n  )\n}\n\nexport default HeaderDe\n","import React from \"react\"\n\nconst Clients = props => (\n  <div>\n    <div className={\"module contact\"}>\n      <h2 className={\"module_heading\"}>\n        {props.contactCopy.contactIntroductionTitle}\n      </h2>\n      {props.contactCopy.contactIntroduction.json.content.map(item => {\n        return item.content.map(content => {\n          return (\n            <p className=\"module_intro\" key={content.value}>\n              {content.value}\n            </p>\n          )\n        })\n      })}\n    </div>\n    <div\n      className=\"contact_locations\"\n      style={{\n        backgroundImage: `url('${props.contactCopy.contactBackgroundImage.file.url}')`,\n      }}\n    >\n      <a\n        href={`#${props.contactCopy.contactSectionHeading}`}\n        className={\"inPageLink\"}\n        name={props.contactCopy.contactSectionHeading}\n        id={props.contactCopy.contactSectionHeading}\n      >\n        &nbsp;\n      </a>\n      <h2 className=\"module_heading\">\n        {props.contactCopy.contactSectionHeading}\n      </h2>\n      <div className=\"contact_locationsContainers\">\n        {props.officeLocations.map(location => {\n          return (\n            <div className={\"contact_location\"} key={location.node.city}>\n              <h3 className=\"contact__region\">{location.node.region}</h3>\n              <h4 className=\"contact__city\">{location.node.city}</h4>\n              <a className=\"contact__tel\" href={`tel:${location.node.tel}`}>\n                {location.node.tel}\n              </a>\n              <a className=\"contact__email\" href=\"mailto:{location.node.email}\">\n                {location.node.email}\n              </a>\n              {/* <a href={location.node.link} className=\"btn btn--secondary\">\n                  {location.node.linkText}\n              </a> */}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  </div>\n)\n\nexport default Clients\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport ContactsLayout from \"./contacts_layout\"\n\nconst Contact = props => {\n  const dataQuery = useStaticQuery(graphql`\n    query ContactsQueryUS {\n      allContentfulContactModule(filter: { node_locale: { eq: \"en-US\" } }) {\n        edges {\n          node {\n            contactIntroductionTitle\n            contactIntroduction {\n              json\n            }\n            contactSectionHeading\n            contactBackgroundImage {\n              title\n              description\n              file {\n                url\n              }\n            }\n          }\n        }\n      }\n      allContentfulOfficeLocation(filter: { node_locale: { eq: \"en-US\" } }) {\n        edges {\n          node {\n            region\n            city\n            tel\n            email\n            linkText\n            link\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <ContactsLayout\n      contactCopy={dataQuery.allContentfulContactModule.edges[0].node}\n      officeLocations={dataQuery.allContentfulOfficeLocation.edges.reverse()}\n    />\n  )\n}\n\nexport default Contact\n","import React from \"react\"\n\nconst Clients = props => (\n  <div className={\"module client_container\"}>\n    <a\n      href={`#${props.title}`}\n      className={\"inPageLink\"}\n      name={props.title}\n      id={props.title}\n    >\n      &nbsp;\n    </a>\n    <h2 className={\"module_heading\"}>{props.title}</h2>\n    <ul className={\"client_list\"}>\n      {props.clientData.map(item => {\n        return (\n          <li className={\"client_item\"} key={item.title}>\n            <img src={item.file.url} alt={item.title} />\n          </li>\n        )\n      })}\n    </ul>\n  </div>\n)\n\nexport default Clients\n","import React from \"react\"\n\nconst Roles = props => (\n  <div>\n    <div className={\"module roles\"}>\n      <a\n        href={`#${props.rolesIntroContent.rolesTitle}`}\n        className={\"inPageLink\"}\n        name={props.rolesIntroContent.rolesTitle}\n        id={props.rolesIntroContent.rolesTitle}\n      >\n        &nbsp;\n      </a>\n      <h2 className={\"module_heading\"}>{props.rolesIntroContent.rolesTitle}</h2>\n      {props.rolesIntroContent.rolesIntroduction.json.content.map(item => {\n        return item.content.map(content => {\n          return (\n            <p className=\"module_intro\" key={content.value}>\n              {content.value}\n            </p>\n          )\n        })\n      })}\n    </div>\n    <div className=\"roleTypes\">\n      {props.roles.map(role => {\n        let uri = encodeURI(`${props.homeLink}${role.node.roleLink}`)\n        let key = `roleType_${role.node.roleTitle}`\n        let image = \"\"\n        if (role.node.roleImage) {\n          image = role.node.roleImage.file.url\n        }\n        return (\n          <a\n            style={{\n              backgroundImage: `url(${image})`,\n            }}\n            key={key}\n            href={uri}\n            className={\"roleTypes_type\"}\n          >\n            {role.node.roleTitle}\n          </a>\n        )\n      })}\n    </div>\n  </div>\n)\n\nexport default Roles\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport HeaderEn from \"./header.en-US\"\nimport Footer from \"./footer.en-US\"\n\nconst LayoutDe = ({ children, location }) => {\n  return (\n    <div className={`main-container`}>\n      <HeaderEn />\n      <article className={`content`}>\n        <main>{children}</main>\n      </article>\n      <Footer />\n    </div>\n  )\n}\n\nLayoutDe.propTypes = {\n  children: PropTypes.node.isRequired,\n  location: PropTypes.object,\n}\n\nexport default LayoutDe\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport ClientsLayout from \"./clients_layout\"\n\nconst Clients = props => {\n  const dataQuery = useStaticQuery(graphql`\n    query ClientsQueryUS {\n      allContentfulClientsModule(filter: { node_locale: { eq: \"en-US\" } }) {\n        edges {\n          node {\n            title\n            logos {\n              title\n              description\n              file {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <ClientsLayout\n      clientData={dataQuery.allContentfulClientsModule.edges[0].node.logos}\n      title={dataQuery.allContentfulClientsModule.edges[0].node.title}\n    />\n  )\n}\n\nexport default Clients\n","import React from \"react\"\nimport LayoutEn from \"../components/layout.en-US\"\nimport SEO from \"../components/seo\"\nimport Clients from \"../components/clients.en-US\"\nimport Contacts from \"../components/contacts.en-US\"\nimport Roles from \"../components/roles.en-US\"\nimport \"../styles/index.scss\"\nimport { graphql } from \"gatsby\"\n\nclass IndexPage extends React.Component {\n  render() {\n    const { data } = this.props\n    //const modules = data.allContentfulModuleTextandCta.edges;\n    const heroModule = data.allContentfulHeroModule.edges\n    const textModule = data.allContentfulModuleTextOnly.edges[0]\n    return (\n      <LayoutEn location={this.props.location}>\n        <SEO title=\"Home\" image={heroModule[0].node.heroImage.file.url} />\n        {heroModule.map(module => {\n          const headingParts = module.node.heroHeading.split(/(?<=\\.)/)\n          return (\n            <div\n              className={`hero__container`}\n              key={`heading_${headingParts[1]}`}\n            >\n              <img\n                className={`hero__image`}\n                src={`${module.node.heroImage.file.url}`}\n                alt={``}\n              />\n              <h1 className={`hero__title`}>\n                {headingParts[0]}\n                <span className=\"hero__lastLine\">{headingParts[1]}</span>\n              </h1>\n            </div>\n          )\n        })}\n        {\n          <div\n            className={`simple-text-module`}\n            dangerouslySetInnerHTML={{\n              __html:\n                textModule.node.childContentfulModuleTextOnlyContentRichTextNode\n                  .childContentfulRichText.html,\n            }}\n          ></div>\n        }\n        <Clients></Clients>\n        <Contacts></Contacts>\n        {/* <Roles></Roles> */}\n      </LayoutEn>\n    )\n  }\n  componentDidMount() {\n    const { hash } = window.location\n    if (hash !== \"\") {\n      setTimeout(() => {\n        const id = decodeURI(hash.replace(\"#\", \"\"))\n        const element = document.getElementById(id)\n        if (element) element.scrollIntoView()\n      }, 0)\n    }\n  }\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allContentfulModuleTextandCta(filter: { node_locale: { eq: \"en-US\" } }) {\n      edges {\n        node {\n          moduleTitle\n          moduleContent {\n            childContentfulRichText {\n              html\n            }\n          }\n          moduleCtAlink {\n            childContentfulRichText {\n              html\n            }\n          }\n        }\n      }\n    }\n    allContentfulHeroModule(filter: { node_locale: { eq: \"en-US\" } }) {\n      edges {\n        node {\n          heroHeading\n          heroImage {\n            file {\n              url\n            }\n          }\n        }\n      }\n    }\n    allContentfulModuleTextOnly(filter: { node_locale: { eq: \"en-US\" } }) {\n      edges {\n        node {\n          childContentfulModuleTextOnlyContentRichTextNode {\n            childContentfulRichText {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\"\nimport { getCurrentLangKey } from \"ptz-i18n\"\n\nconst FooterUS = () => {\n  const dataQuery = useStaticQuery(graphql`\n    query footerUS {\n      allContentfulMainNav(filter: { node_locale: { eq: \"en-US\" } }) {\n        edges {\n          node {\n            navItems {\n              navItemText\n              navItemUrl\n            }\n          }\n        }\n      }\n      allContentfulLegalNav(filter: { node_locale: { eq: \"en-US\" } }) {\n        edges {\n          node {\n            navItems {\n              navItemText\n              navItemUrl\n            }\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          title\n          description\n          languages {\n            defaultLangKey\n            langs\n          }\n        }\n      }\n    }\n  `)\n  const url = typeof window !== \"undefined\" ? window.location.pathname : \"\"\n  const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages\n  const langKey = getCurrentLangKey(langs, defaultLangKey, url)\n  let homeLink = langKey === defaultLangKey ? \"\" : `/${langKey}/`\n  return (\n    <FooterLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    ></FooterLayout>\n  )\n}\n\nexport default FooterUS\n"],"sourceRoot":""}