{"version":3,"sources":["webpack:///./src/components/footer.de-DE.js","webpack:///./src/components/header.de-DE.js","webpack:///./src/templates/blog-posts.de.js"],"names":["FooterDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","navLinks","allContentfulMainNav","edges","node","navItems","legalLinks","allContentfulLegalNav","switcherLinks","HeaderDe","BlogPost","props","blogPost","data","contentfulBlogPost","date","Date","parse","blogDate","className","blogTitle","blogAuthor","toDateString","dangerouslySetInnerHTML","__html","blogContent","childContentfulRichText","html","pageQuery"],"mappings":"yJAuDeA,IAlDE,WACf,IAAMC,EAAS,OAkCPC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAnCpD,EAoCeJ,EAAUK,KAAKC,aAAaC,UAAtDC,EApCW,EAoCXA,MAAOC,EApCI,EAoCJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACrDW,EAAYF,IAAYD,EAAkB,IAA/B,IAAyCC,EAAzC,IACjB,OACE,kBAAC,IAAD,CACEE,SAAUA,EACVC,SAAUb,EAAUc,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDC,WAAYlB,EAAUmB,sBAAsBJ,MAAM,GAAGC,KAAKC,SAC1DG,cAAeZ,M,u4CCLNa,IAvCE,WACb,IAAMrB,EAAS,OAwBTC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAzBpD,EA0BeJ,EAAUK,KAAKC,aAAaC,UAAtDC,EA1BW,EA0BXA,MAAOC,EA1BI,EA0BJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACrDW,EAAYF,IAAYD,EAAkB,IAA/B,IAAyCC,EAAzC,IACjB,OACE,kBAAC,IAAD,CACEE,SAAUA,EACVC,SAAUb,EAAUc,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDG,cAAeZ,M,kCCtCrB,kGAuBec,UAlBE,SAACC,GAAW,IAEfC,EADSD,EAARE,KACeC,mBAChBC,EAAM,IAAIC,KAAKA,KAAKC,MAAML,EAASM,WACzC,OACI,6BACI,kBAAC,IAAD,MACA,yBAAKC,UAAS,mBACV,wBAAIA,UAAS,eAAkBP,EAASQ,WACxC,yBAAKD,UAAS,6BACV,uBAAGA,UAAS,gBAAmBP,EAASS,YAD5C,MAC8D,uBAAGF,UAAS,cAAiBJ,EAAKO,iBAEhG,uBAAGH,UAAS,gBAAmBI,wBAAyB,CAACC,OAAOZ,EAASa,YAAYC,wBAAwBC,SAEjH,kBAAC,IAAD,QAMT,IAAMC,EAAS","file":"component---src-templates-blog-posts-de-js-5f0b6b316d24de152f97.js","sourcesContent":["import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\nimport {getCurrentLangKey} from \"ptz-i18n\";\n\nconst FooterDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n      query footerDe {\n        allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        allContentfulLegalNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title,\n            description,\n            languages {\n              defaultLangKey\n              langs\n            }\n          }\n        }\n      }\n    `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    let homeLink = (langKey === defaultLangKey) ? '/' : `/${langKey}/`;\n  return (\n    <FooterLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    >\n    </FooterLayout>\n  );\n}\n\nexport default FooterDe\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerDe {\n          allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    let homeLink = (langKey === defaultLangKey) ? '/' : `/${langKey}/`;\n  return (\n    <HeaderLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    >\n    </HeaderLayout>\n  );\n}\n\nexport default HeaderDe\n","import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport HeaderDe from \"../components/header.de-DE\";\nimport FooterDe from \"../components/footer.de-DE\";\n\nconst BlogPost = (props) => {\n        const {data} = props;\n        const blogPost = data.contentfulBlogPost;\n        const date =new Date(Date.parse(blogPost.blogDate));\n        return (\n            <div>\n                <HeaderDe />\n                <div className={`blog__container`}>\n                    <h1 className={`blog__title`}>{blogPost.blogTitle}</h1>\n                    <div className={`blog__author-date-wrapper`}>\n                        <p className={`blog__author`}>{blogPost.blogAuthor}</p> | <p className={`blog__date`}>{date.toDateString()}</p>\n                    </div>\n                    <p className={`blog__content`} dangerouslySetInnerHTML={{__html:blogPost.blogContent.childContentfulRichText.html}}></p>\n                </div>\n                <FooterDe />\n            </div>\n        )\n}\nexport default BlogPost\n\nexport const pageQuery = graphql`\n    query BlogPostDe($slug: String!){\n         contentfulBlogPost(slug: {eq: $slug}, node_locale: {eq: \"de\"}) {\n            blogTitle\n            blogDate\n            blogAuthor\n            slug\n            node_locale\n            blogContent {\n              childContentfulRichText {\n                html\n              }\n            }\n          }\n    }\n`\n"],"sourceRoot":""}