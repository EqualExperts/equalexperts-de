{"version":3,"sources":["webpack:///./src/components/contacts_layout.js","webpack:///./src/components/clients_layout.js","webpack:///./src/components/layout.de-DE.js","webpack:///./src/components/clients.de-DE.js","webpack:///./src/components/contacts.de-DE.js","webpack:///./src/components/roles.de-DE.js","webpack:///./src/pages/index.de.js","webpack:///./src/components/footer.de-DE.js","webpack:///./src/components/roles_layout.js","webpack:///./src/components/header.de-DE.js"],"names":["Clients","props","className","contactCopy","contactIntroductionTitle","contactIntroduction","json","content","map","item","key","value","style","backgroundImage","contactBackgroundImage","file","url","href","contactSectionHeading","name","id","officeLocations","location","node","city","region","tel","email","title","clientData","src","alt","LayoutDe","children","dataQuery","allContentfulClientsModule","edges","logos","Contact","allContentfulContactModule","allContentfulOfficeLocation","reverse","RolesDe","window","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","rolesIntroContent","allContentfulRolesIntro","roles","allContentfulRole","IndexPage","render","data","this","heroModule","allContentfulHeroModule","textModule","allContentfulModuleTextOnly","image","heroImage","module","headingParts","heroHeading","split","dangerouslySetInnerHTML","__html","childContentfulModuleTextOnlyContentRichTextNode","childContentfulRichText","html","componentDidMount","hash","setTimeout","decodeURI","replace","element","document","getElementById","scrollIntoView","React","Component","pageQuery","FooterDe","navLinks","allContentfulMainNav","navItems","legalLinks","allContentfulLegalNav","switcherLinks","Roles","rolesTitle","rolesIntroduction","role","uri","encodeURI","roleLink","roleTitle","roleImage","HeaderDe"],"mappings":"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","file":"component---src-pages-index-de-js-53a73b01c5f4e5219a8f.js","sourcesContent":["import React from \"react\";\n\nconst Clients = (props) => (\n  <div>\n    <div className={\"module contact\"}>\n      <h2 className={\"module_heading\"}>{props.contactCopy.contactIntroductionTitle}</h2>\n      {props.contactCopy.contactIntroduction.json.content.map(item => {\n          return item.content.map(content => {\n            return (<p className=\"module_intro\" key={content.value}>{content.value}</p>)\n          })\n      })}\n    </div>\n    <div className=\"contact_locations\" style={{backgroundImage : `url('${props.contactCopy.contactBackgroundImage.file.url}')`}}>\n      <a \n        href={`#${props.contactCopy.contactSectionHeading}`} \n        className={\"inPageLink\"} \n        name={props.contactCopy.contactSectionHeading}\n        id={props.contactCopy.contactSectionHeading}>&nbsp;</a>\n      <h2 className=\"module_heading\">{props.contactCopy.contactSectionHeading}</h2>\n      <div className=\"contact_locationsContainers\">\n        {props.officeLocations.map(location => {\n          return (\n            <div className={\"contact_location\"} key={location.node.city}>\n              <h3 className=\"contact__region\">{location.node.region}</h3>\n              <h4 className=\"contact__city\">{location.node.city}</h4>\n              <a className=\"contact__tel\" href={`tel:${location.node.tel}`}>{location.node.tel}</a>\n              <a className=\"contact__email\" href=\"mailto:{location.node.email}\">{location.node.email}</a>\n              {/* <a href={location.node.link} className=\"btn btn--secondary\">\n                  {location.node.linkText}\n              </a> */}\n            </div>\n          )\n        })}\n      </div>\n  </div>\n</div>\n)\n\n\nexport default Clients\n","import React from \"react\";\n\nconst Clients = (props) => (\n  <div className={\"module client_container\"}>\n    <a href={`#${props.title}`} className={\"inPageLink\"} name={props.title} id={props.title} >&nbsp;</a>\n    <h2 className={\"module_heading\"}>{props.title}</h2>\n    <ul className={\"client_list\"}>\n        {props.clientData.map((item) => {\n        return (<li className={\"client_item\"} key={item.title}><img src={item.file.url} alt={item.title}/></li>)  \n        })}\n    </ul>\n  </div>\n)\n\n\nexport default Clients\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport HeaderDe from \"./header.de-DE\"\nimport FooterDe from \"./footer.de-DE\";\n\nconst LayoutDe = ({ children, location }) => {\n  return (\n    <div className={`main-container`}>\n      <HeaderDe/>\n      <article className={`content`}>\n        <main>{children}</main>\n      </article>\n      <FooterDe />\n    </div>\n  )\n}\n\nLayoutDe.propTypes = {\n  children: PropTypes.node.isRequired,\n  location: PropTypes.object,\n}\n\nexport default LayoutDe\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\";\nimport ClientsLayout from \"./clients_layout\";\n\nconst Clients = (props) => {\n    const dataQuery = useStaticQuery(graphql`\n    query ClientsQueryDe {\n        allContentfulClientsModule(filter: {node_locale: {eq: \"de\"}}) {\n        edges {\n          node {\n            title\n            logos {\n                title\n                description\n                file {\n                    url\n                }\n            }\n          }\n        }\n      }\n    }\n    `);\n    return ( \n        <ClientsLayout clientData={dataQuery.allContentfulClientsModule.edges[0].node.logos} title={dataQuery.allContentfulClientsModule.edges[0].node.title}/>\n    );\n}\n\n\nexport default Clients","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\";\nimport ContactsLayout from \"./contacts_layout\";\n\nconst Contact = (props) => {\n    const dataQuery = useStaticQuery(graphql`\n    query ContactsQueryDe {\n        allContentfulContactModule(filter: {node_locale: {eq: \"de\"}}) {\n            edges {\n                node {\n                    contactIntroductionTitle\n                    contactIntroduction {\n                        json\n                    }\n                    contactSectionHeading\n                    contactBackgroundImage {\n                        title\n                        description\n                        file {\n                            url\n                        }\n                    }\n                }\n            }\n        }\n        allContentfulOfficeLocation(filter: {node_locale: {eq: \"de\"}}) {\n            edges {\n                node {\n                    region\n                    city\n                    tel\n                    email\n                    linkText\n                    link\n                }\n            }\n        }\n    }\n    `);\n    return ( \n        <ContactsLayout \n            contactCopy={dataQuery.allContentfulContactModule.edges[0].node} \n            officeLocations={dataQuery.allContentfulOfficeLocation.edges.reverse()} \n        />\n    );\n}\n\n\nexport default Contact","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\";\nimport RolesLayout from \"./roles_layout\";\nimport {getCurrentLangKey} from \"ptz-i18n\";\n\nconst RolesDe = (props) => {\n    const dataQuery = useStaticQuery(graphql`\n        query RolesQueryDe {\n            allContentfulRolesIntro(filter: {node_locale: {eq: \"de\"}}) {\n                edges {\n                    node {\n                        rolesTitle\n                        rolesIntroduction {\n                            json\n                        }\n                    }\n                }\n            }\n            allContentfulRole(filter: {node_locale: {eq: \"de\"}}) {\n                edges {\n                    node {\n                        roleTitle\n                        roleLink\n                        roleImage {\n                            file {\n                                fileName\n                                url\n                            }\n                        }\n                    }\n                }\n            }\n            site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n              }\n        }\n    `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    let homeLink = (langKey === defaultLangKey) ? '/' : `/${langKey}/`;\n    return ( \n        <RolesLayout\n            homeLink={homeLink}\n            rolesIntroContent={dataQuery.allContentfulRolesIntro.edges[0].node}\n            roles={dataQuery.allContentfulRole.edges}\n        />\n    );\n}\n\n\nexport default RolesDe","import React from \"react\"\nimport LayoutDe from \"../components/layout.de-DE\"\nimport SEO from \"../components/seo\"\nimport Clients from \"../components/clients.de-DE\"\nimport Contacts from \"../components/contacts.de-DE\"\nimport Roles from \"../components/roles.de-DE\"\nimport \"../styles/index.scss\"\nimport {graphql} from \"gatsby\"\n\n\nclass IndexPage extends React.Component {\n  render() {\n    const { data } = this.props;\n    //const modules = data.allContentfulModuleTextandCta.edges;\n    const heroModule = data.allContentfulHeroModule.edges;\n    const textModule= data.allContentfulModuleTextOnly.edges[0];\n    return (\n      <LayoutDe location={this.props.location}>\n        <SEO \n          title=\"Home\"\n          image={heroModule[0].node.heroImage.file.url}\n        />\n        {heroModule.map((module) => {\n          const headingParts = module.node.heroHeading.split(/(?<=\\.)/);\n          return (\n            <div className={`hero__container`} key={module}>\n               <img className={`hero__image`} src={`${module.node.heroImage.file.url}`} alt={``} />\n              <h1 className={`hero__title`}>{headingParts[0]}<span className=\"hero__lastLine\">{headingParts[1]}</span></h1>\n            </div>\n          )\n        })}\n        {\n          <div className={`simple-text-module`} dangerouslySetInnerHTML={{__html:textModule.node.childContentfulModuleTextOnlyContentRichTextNode.childContentfulRichText.html}}></div>\n        }\n        <Clients></Clients>\n        <Contacts></Contacts>\n        <Roles></Roles>\n        {/* {\n          modules.map((module) => {\n            return (\n              <div className={`module`} key={module}>\n                <div className={`module__title`}>{module.node.moduleTitle}</div>\n                <div className={`module__content`} dangerouslySetInnerHTML={{ __html: module.node.moduleContent.childContentfulRichText.html }} />\n                {module.node.moduleCtAlink.childContentfulRichText.html ?\n                  <div className={`module__link`}\n                    dangerouslySetInnerHTML={{ __html: module.node.moduleCtAlink.childContentfulRichText.html }} /> : ''\n                }\n              </div>\n\n            )\n          })\n        } */}\n      </LayoutDe>\n    )\n  }\n  componentDidMount() {\n    const { hash } = window.location;\n    if (hash !== '') {\n      setTimeout(() => {\n        const id = decodeURI(hash.replace('#', ''));\n        const element = document.getElementById(id);\n        if (element) element.scrollIntoView();\n      }, 0);\n    }\n  }\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\nquery {\n  allContentfulModuleTextandCta(filter: {node_locale: {eq: \"de\"}}) {\n    edges {\n      node {\n        moduleTitle\n        moduleContent {\n          childContentfulRichText {\n           html\n          }\n        }\n        moduleCtAlink {\n          childContentfulRichText {\n            html\n          }\n        }\n      }\n    }\n  }\n  allContentfulHeroModule(filter: {node_locale: {eq: \"de\"}}) {\n    edges {\n      node {\n        heroHeading\n        heroImage {\n          file {\n            url\n          }\n        }\n      }\n    }\n  }\n  allContentfulModuleTextOnly(filter: {node_locale: {eq: \"de\"}}) {\n    edges {\n      node {\n        childContentfulModuleTextOnlyContentRichTextNode {\n          childContentfulRichText {\n            html\n          }\n        }\n      }\n    }\n  }\n}\n`","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\nimport {getCurrentLangKey} from \"ptz-i18n\";\n\nconst FooterDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n      query footerDe {\n        allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        allContentfulLegalNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title,\n            description,\n            languages {\n              defaultLangKey\n              langs\n            }\n          }\n        }\n      }\n    `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    let homeLink = (langKey === defaultLangKey) ? '/' : `/${langKey}/`;\n  return (\n    <FooterLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    >\n    </FooterLayout>\n  );\n}\n\nexport default FooterDe\n","import React from \"react\";\n\nconst Roles = (props) => (\n  <div>\n    <div className={\"module roles\"}>\n      <a \n        href={`#${props.rolesIntroContent.rolesTitle}`} \n        className={\"inPageLink\"} \n        name={props.rolesIntroContent.rolesTitle}\n        id={props.rolesIntroContent.rolesTitle}\n        >&nbsp;</a>\n      <h2 className={\"module_heading\"}>{props.rolesIntroContent.rolesTitle}</h2>\n      {props.rolesIntroContent.rolesIntroduction.json.content.map(item => {\n          return item.content.map(content => {\n            return (<p className=\"module_intro\" key={content.value}>{content.value}</p>)\n          })\n      })}\n    </div>\n    <div className=\"roleTypes\">\n      {props.roles.map(role => {\n        let uri = encodeURI(`${props.homeLink}${role.node.roleLink}`);\n        let key = `roleType_${role.node.roleTitle}`;\n        let image = \"\";\n        if(role.node.roleImage) {\n          image = role.node.roleImage.file.url;\n        }\n        return (\n          <a\n            style={{\n              backgroundImage : `url(${image})`\n            }}\n            key={key}\n            href={uri} \n            className={\"roleTypes_type\"}\n            >{role.node.roleTitle}</a>\n        )\n      })}\n  </div>\n</div>\n)\n\n\nexport default Roles\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerDe {\n          allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    let homeLink = (langKey === defaultLangKey) ? '/' : `/${langKey}/`;\n  return (\n    <HeaderLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    >\n    </HeaderLayout>\n  );\n}\n\nexport default HeaderDe\n"],"sourceRoot":""}