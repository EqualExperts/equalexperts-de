{"version":3,"sources":["webpack:///./src/components/header.en-US.js","webpack:///./src/templates/blog-posts.en-US.js","webpack:///./src/components/footer.en-US.js"],"names":["HeaderDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","langsMenu","getLangs","getUrlForLang","navLinks","allContentfulMainNav","edges","node","navItems","switcherLinks","BlogPost","props","blogPost","data","contentfulBlogPost","date","Date","parse","blogDate","className","blogTitle","blogAuthor","toDateString","dangerouslySetInnerHTML","__html","blogContent","childContentfulRichText","html","pageQuery","FooterUS","legalLinks","allContentfulLegalNav"],"mappings":"2JA6CeA,IAxCE,WACb,IAAMC,EAAS,OAwBTC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAzBpD,EA0BeJ,EAAUK,KAAKC,aAAaC,UAAtDC,EA1BW,EA0BXA,MAAOC,EA1BI,EA0BJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACnDW,EAAQ,IAAOF,EAAP,IACRG,EAAYC,mBAASN,EAAOE,EAASK,wBAAcH,EAAUX,IAEnE,OACE,kBAAC,IAAD,CACMe,SAAUhB,EAAUiB,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDC,cAAeR,M,kCCvC3B,kGAuBeS,UAlBE,SAACC,GAAW,IAEfC,EADSD,EAARE,KACeC,mBAChBC,EAAM,IAAIC,KAAKA,KAAKC,MAAML,EAASM,WAC7C,OACI,6BACI,kBAAC,IAAD,MACA,yBAAKC,UAAS,mBACV,wBAAIA,UAAS,eAAkBP,EAASQ,WACxC,yBAAKD,UAAS,6BACV,uBAAGA,UAAS,gBAAmBP,EAASS,YAD5C,MAC8D,uBAAGF,UAAS,cAAiBJ,EAAKO,iBAEhG,uBAAGH,UAAS,gBAAmBI,wBAAyB,CAACC,OAAOZ,EAASa,YAAYC,wBAAwBC,SAErH,kBAAC,IAAD,QAMD,IAAMC,EAAS,c,+FC8BPC,IAlDE,WACb,IAAMzC,EAAS,OAkCPC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAnCtD,EAoCiBJ,EAAUK,KAAKC,aAAaC,UAAtDC,EApCS,EAoCTA,MAAOC,EApCE,EAoCFA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACnDW,EAAQ,IAAOF,EAAP,IACRG,EAAYC,mBAASN,EAAOE,EAASK,wBAAcH,EAAUX,IACrE,OACE,kBAAC,IAAD,CACMe,SAAUhB,EAAUiB,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDsB,WAAY1C,EAAU2C,sBAAsBzB,MAAM,GAAGC,KAAKC,SAC1DC,cAAeR,M","file":"component---src-templates-blog-posts-en-us-js-9d24cd26278ba1e3f63f.js","sourcesContent":["import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey, getLangs, getUrlForLang} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerEn {\n          allContentfulMainNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    const homeLink = `/${langKey}/`;\n    const langsMenu = getLangs(langs, langKey, getUrlForLang(homeLink, url));\n\n    return (\n      <HeaderLayout\n            navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n            switcherLinks={langsMenu}\n      >\n      </HeaderLayout>\n    );\n}\n\nexport default HeaderDe\n","import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport HeaderEn from \"../components/header.en-US\";\nimport FooterEn from \"../components/footer.en-US\";\n\nconst BlogPost = (props) => {\n        const {data} = props;\n        const blogPost = data.contentfulBlogPost;\n        const date =new Date(Date.parse(blogPost.blogDate));\n    return (\n        <div>\n            <HeaderEn />\n            <div className={`blog__container`}>\n                <h1 className={`blog__title`}>{blogPost.blogTitle}</h1>\n                <div className={`blog__author-date-wrapper`}>\n                    <p className={`blog__author`}>{blogPost.blogAuthor}</p> | <p className={`blog__date`}>{date.toDateString()}</p>\n                </div>\n                <p className={`blog__content`} dangerouslySetInnerHTML={{__html:blogPost.blogContent.childContentfulRichText.html}}></p>\n            </div>\n        <FooterEn />\n        </div>\n    )\n}\nexport default BlogPost\n\nexport const pageQuery = graphql`\n    query BlogPostEn($slug: String!){\n        contentfulBlogPost(slug:{eq: $slug}){\n            blogTitle\n            blogDate\n            blogAuthor\n            slug\n            node_locale\n            blogContent {\n              childContentfulRichText {\n                html\n              }\n            }\n            }\n            site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n    }\n`\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\nimport {getCurrentLangKey, getLangs, getUrlForLang} from \"ptz-i18n\";\n\nconst FooterUS = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query footerUS {\n          allContentfulMainNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          allContentfulLegalNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n            siteMetadata {\n              title,\n              description,\n              languages {\n                defaultLangKey\n                langs\n              }\n            }\n          }\n        }\n      `);\n      const url = typeof window !== 'undefined' ? window.location.pathname : '';\n      const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n      const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n      const homeLink = `/${langKey}/`;\n      const langsMenu = getLangs(langs, langKey, getUrlForLang(homeLink, url));\n    return (\n      <FooterLayout\n            navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n            legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n            switcherLinks={langsMenu}\n      >\n      </FooterLayout>\n    );\n}\n\nexport default FooterUS\n"],"sourceRoot":""}