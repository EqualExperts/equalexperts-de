{"version":3,"sources":["webpack:///./src/pages/contact.de.js","webpack:///./src/components/header.de-DE.js"],"names":["Contact","children","data","location","className","allContentfulContact","edges","node","contactHeading","dangerouslySetInnerHTML","__html","childContentfulContactContactBodyContentRichTextNode","childContentfulRichText","html","childContentfulContactContactAddressRichTextNode","HeaderDe","dataQuery","url","window","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","langsMenu","getLangs","getUrlForLang","switcherLinks","map","lang","i","separatorClass","length","to","link","key","selected","navLinks","allContentfulHeaderMenu","blogLink","contactLink"],"mappings":"kjDAiDeA,UA3CC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SACTC,GADkC,EAAfC,SACf,QAqBV,OACI,yBAAKC,UAAS,kBACV,kBAAC,IAAD,MACA,6BAASA,UAAS,WACd,8BAAOH,GACP,wBAAIG,UAAS,oBAAuBF,EAAKG,qBAAqBC,MAAM,GAAGC,KAAKC,gBAC5E,yBAAKJ,UAAS,4BACd,yBAAKA,UAAS,mBAAsBK,wBAAyB,CAACC,OAAOR,EAAKG,qBAAqBC,MAAM,GAAGC,KAAKI,qDAAqDC,wBAAwBC,QAC1L,yBAAKT,UAAS,mBAAsBK,wBAAyB,CAACC,OAAOR,EAAKG,qBAAqBC,MAAM,GAAGC,KAAKO,iDAAiDF,wBAAwBC,UAG1L,kBAAC,IAAD,S,qHCsBGE,IAxDE,WACb,IAAMC,EAAS,OAuBTC,EAAwB,oBAAXC,OAAyBA,OAAOf,SAASgB,SAAW,GAxBpD,EAyBeH,EAAUI,KAAKC,aAAaC,UAAtDC,EAzBW,EAyBXA,MAAOC,EAzBI,EAyBJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBP,GACnDU,EAAQ,IAAOF,EAAP,IACRG,EAAYC,mBAASN,EAAOE,EAASK,wBAAcH,EAAUV,IAC7Dc,EAAgBH,EAAUI,KAAI,SAACC,EAAMC,GACvC,IAAIC,EAAiBD,EAAIN,EAAUQ,OAAO,EAAI,mCAAqC,KACnF,OACI,wBAAIhC,UAAW+B,GACX,kBAAC,OAAD,CAAME,GAAIJ,EAAKK,KAAMC,IAAKN,EAAKR,SAC7B,0BAAMe,SAAUP,EAAKO,UACC,OAAjBP,EAAKR,QAAiB,KAAK,WAO1CgB,EAAW,CACf,kBAAC,OAAD,CAAMJ,GAAG,kBAAkBjC,UAAS,2BAA8BY,EAAU0B,wBAAwBpC,MAAM,GAAGC,KAAKoC,UAClH,kBAAC,OAAD,CAAMN,GAAG,eAAejC,UAAS,2BAA8BY,EAAU0B,wBAAwBpC,MAAM,GAAGC,KAAKqC,cAGjH,OACE,kBAAC,IAAD,CACEH,SAAUA,EACVV,cAAeA","file":"component---src-pages-contact-de-js-b3f13db656ae8386077d.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {graphql, useStaticQuery} from \"gatsby\"\nimport HeaderDe from \"../components/header.de-DE\";\nimport FooterDe from \"../components/footer.de-DE\";\n\nconst Contact = ({ children, location }) => {\n    const data =useStaticQuery(graphql`\n        query ContactUsQueryDe {\n            allContentfulContact(filter: {node_locale: {eq: \"de\"}}) {\n            edges {\n              node {\n                contactHeading\n                childContentfulContactContactBodyContentRichTextNode {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n                childContentfulContactContactAddressRichTextNode {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n              }\n            }\n          }\n        }\n      `);\n    return (\n        <div className={`main-container`}>\n            <HeaderDe/>\n            <article className={`content`}>\n                <main>{children}</main>\n                <h1 className={`contact__heading`}>{data.allContentfulContact.edges[0].node.contactHeading}</h1>\n                <div className={`contact__content-wrapper`}>\n                <div className={`contact__content`} dangerouslySetInnerHTML={{__html:data.allContentfulContact.edges[0].node.childContentfulContactContactBodyContentRichTextNode.childContentfulRichText.html}}/>\n                <div className={`contact__address`} dangerouslySetInnerHTML={{__html:data.allContentfulContact.edges[0].node.childContentfulContactContactAddressRichTextNode.childContentfulRichText.html}}/>\n                </div>\n            </article>\n            <FooterDe />\n        </div>\n    )\n}\n\nContact.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object,\n}\n\nexport default Contact;\n","import {graphql, Link, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey, getLangs, getUrlForLang} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerDe {\n          allContentfulHeaderMenu(filter: {node_locale: {eq: \"de\"}}){\n            edges {\n              node {\n                contactLink\n                blogLink\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    const homeLink = `/${langKey}/`;\n    const langsMenu = getLangs(langs, langKey, getUrlForLang(homeLink, url));\n    const switcherLinks = langsMenu.map((lang, i) => {\n        let separatorClass = i < langsMenu.length-1 ? \"header__lang-switcher__separator\" : null;\n        return (\n            <li className={separatorClass}>\n                <Link to={lang.link} key={lang.langKey}>\n                  <span selected={lang.selected}>\n                      {lang.langKey === 'de'?'DE':'EN'}\n                  </span>\n                </Link>\n            </li>\n              )\n          }\n  );\n  const navLinks = [\n    <Link to=\"/de/blogs-list/\" className={`header__navigation-link`}>{dataQuery.allContentfulHeaderMenu.edges[0].node.blogLink}</Link>,\n    <Link to=\"/de/contact/\" className={`header__navigation-link`}>{dataQuery.allContentfulHeaderMenu.edges[0].node.contactLink}</Link>\n  ];\n\n  return (\n    <HeaderLayout\n      navLinks={navLinks}\n      switcherLinks={switcherLinks}\n    >\n    </HeaderLayout>\n  );\n}\n\nexport default HeaderDe\n"],"sourceRoot":""}