{"version":3,"sources":["webpack:///./src/components/header.en-US.js","webpack:///./src/pages/blogs-list.en-US.js"],"names":["HeaderDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","langsMenu","getLangs","getUrlForLang","navLinks","to","key","className","allContentfulHeaderMenu","edges","node","blogLink","contactLink","switcherLinks","BlogListDe","children","data","blogPosts","allContentfulBlogPost","blogList","allContentfulBlogList","blogListTitle","dangerouslySetInnerHTML","__html","childContentfulBlogListBlogListContentRichTextNode","childContentfulRichText","html","map","blog","date","Date","parse","blogDate","getMonth","getFullYear","slug","blogTitle","blogAuthor","blogContent"],"mappings":"sKAkDeA,IA7CE,WACb,IAAMC,EAAS,OAsBTC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAvBpD,EAwBeJ,EAAUK,KAAKC,aAAaC,UAAtDC,EAxBW,EAwBXA,MAAOC,EAxBI,EAwBJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACnDW,EAAQ,IAAOF,EAAP,IACRG,EAAYC,mBAASN,EAAOE,EAASK,wBAAcH,EAAUX,IAE7De,EAAW,CACf,kBAAC,OAAD,CAAMC,GAAG,oBAAoBC,IAAK,eAAgBC,UAAS,2BAA3D,aACA,kBAAC,OAAD,CAAMF,GAAG,iBAAiBC,IAAK,eAAgBC,UAAS,2BAAxD,UACA,kBAAC,OAAD,CAAMF,GAAG,qBAAqBC,IAAK,eAAgBC,UAAS,2BAA8BnB,EAAUoB,wBAAwBC,MAAM,GAAGC,KAAKC,UAC1I,kBAAC,OAAD,CAAMN,GAAG,kBAAkBC,IAAK,eAAgBC,UAAS,2BAA8BnB,EAAUoB,wBAAwBC,MAAM,GAAGC,KAAKE,cAGzI,OACE,kBAAC,IAAD,CACMR,SAAUA,EACVS,cAAeZ,M,kHCwBZa,UA9DI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SACZC,GADqC,EAAfzB,SAClB,QA+BJ0B,EAAWD,EAAKE,sBAAsBT,MACtCU,EAAWH,EAAKI,sBAAsBX,MAAM,GAAGC,KAErD,OACI,yBAAKH,UAAS,kBACV,kBAAC,IAAD,MACA,6BAASA,UAAS,WACd,8BAAOQ,GACP,wBAAIR,UAAS,sBAAyBY,EAASE,eAC/C,yBAAKd,UAAS,mBAAsBe,wBAAyB,CAACC,OAAQJ,EAASK,mDAAmDC,wBAAwBC,QAC1J,wBAAInB,UAAS,eACRU,EAAUU,KAAI,SAACC,GACZ,IAAMC,EAAO,IAAIC,KAAKA,KAAKC,MAAMH,EAAKlB,KAAKsB,WAC3C,OAAO,4BAAI,8BAAOH,EAAKI,WAAa,EAAzB,IAA6BJ,EAAKK,eAAqB,kBAAC,OAAD,CAC9D7B,GAAE,SAAWuB,EAAKlB,KAAKyB,MAASP,EAAKlB,KAAK0B,WAAiB,2CAAiBR,EAAKlB,KAAK2B,YACtF,uBAAG9B,UAAS,qBAAwBe,wBAAyB,CAACC,OAAOK,EAAKlB,KAAK4B,YAAYb,wBAAwBC,cAKnI,kBAAC,IAAD,S","file":"component---src-pages-blogs-list-en-us-js-94aff6a6b4bb92bb4761.js","sourcesContent":["import {graphql, Link, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey, getLangs, getUrlForLang} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerEn {\n          allContentfulHeaderMenu(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                contactLink\n                blogLink\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    const homeLink = `/${langKey}/`;\n    const langsMenu = getLangs(langs, langKey, getUrlForLang(homeLink, url));\n\n    const navLinks = [\n      <Link to=\"/en-US/customers/\" key={'blogNavItem1'} className={`header__navigation-link`}>Customers</Link>,\n      <Link to=\"/en-US/career/\" key={'blogNavItem2'} className={`header__navigation-link`}>Career</Link>,\n      <Link to=\"/en-US/blogs-list/\" key={'blogNavItem3'} className={`header__navigation-link`}>{dataQuery.allContentfulHeaderMenu.edges[0].node.blogLink}</Link>,\n      <Link to=\"/en-US/contact/\" key={'blogNavItem4'} className={`header__navigation-link`}>{dataQuery.allContentfulHeaderMenu.edges[0].node.contactLink}</Link>\n    ];\n\n    return (\n      <HeaderLayout\n            navLinks={navLinks}\n            switcherLinks={langsMenu}\n      >\n      </HeaderLayout>\n    );\n}\n\nexport default HeaderDe\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {useStaticQuery, graphql, Link} from \"gatsby\"\nimport HeaderEn from \"../components/header.en-US\";\nimport FooterDe from \"../components/footer.de-DE\";\n\nconst BlogListDe = ({ children, location }) => {\n    const data = useStaticQuery(graphql`\n    query BlogListEn {\n          allContentfulBlogPost(filter: {node_locale: {eq: \"en-US\"}}) {\n            edges {\n              node {\n                slug,\n                blogTitle,\n                blogAuthor,\n                blogDate,\n                blogContent {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n              }\n            }\n          }\n          allContentfulBlogList(filter: {node_locale: {eq: \"en-US\"}}) {\n            edges {\n              node {\n                blogListTitle\n                childContentfulBlogListBlogListContentRichTextNode {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n              }\n            }\n          }\n        }\n  `)\n    const blogPosts =data.allContentfulBlogPost.edges;\n    const blogList = data.allContentfulBlogList.edges[0].node;\n\n    return (\n        <div className={`main-container`}>\n            <HeaderEn/>\n            <article className={`content`}>\n                <main>{children}</main>\n                <h1 className={`blog-list__heading`}>{blogList.blogListTitle}</h1>\n                <div className={`blog-list__title`} dangerouslySetInnerHTML={{__html: blogList.childContentfulBlogListBlogListContentRichTextNode.childContentfulRichText.html}}/>\n                <ul className={`blogs__list`}>\n                    {blogPosts.map((blog)=> {\n                        const date = new Date(Date.parse(blog.node.blogDate));\n                        return <li><span>{date.getMonth() + 1}/{date.getFullYear()}</span><Link\n                            to={`en-US/${blog.node.slug}`}>{blog.node.blogTitle}</Link><span> Author - {blog.node.blogAuthor}</span>\n                            <p className={`blog-list__content`} dangerouslySetInnerHTML={{__html:blog.node.blogContent.childContentfulRichText.html}} />\n                        </li>\n                    })}\n                </ul>\n            </article>\n            <FooterDe />\n        </div>\n    )\n}\n\nBlogListDe.propTypes = {\n    children: PropTypes.node.isRequired,\n    location: PropTypes.object,\n}\n\nexport default BlogListDe\n"],"sourceRoot":""}