{"version":3,"sources":["webpack:///./src/components/footer.de-DE.js","webpack:///./src/components/header.de-DE.js","webpack:///./src/templates/blog-posts.de.js"],"names":["FooterDe","dataQuery","legalLinks","className","key","href","navLinks","allContentfulMainNav","edges","node","navItems","HeaderDe","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","langsMenu","getLangs","getUrlForLang","switcherLinks","BlogPost","props","blogPost","data","contentfulBlogPost","date","Date","parse","blogDate","blogTitle","blogAuthor","toDateString","dangerouslySetInnerHTML","__html","blogContent","childContentfulRichText","html","pageQuery"],"mappings":"6IA6CeA,IAzCE,WACf,IAAMC,EAAS,OAyBTC,EAAa,CACjB,wBAAIC,UAAU,yBAAyBC,IAAK,iBAAiB,uBAAGC,KAAK,mBAAR,mBAC7D,wBAAIF,UAAU,yBAAyBC,IAAK,iBAAiB,uBAAGC,KAAK,0BAAR,0BAC7D,wBAAIF,UAAU,yBAAyBC,IAAK,iBAAiB,uBAAGC,KAAK,UAAR,qBAG/D,OACE,kBAAC,IAAD,CACEC,SAAUL,EAAUM,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDR,WAAYA,M,6lCCKHS,IAvCE,WACb,IAAMV,EAAS,OAwBTW,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAzBpD,EA0Bed,EAAUe,KAAKC,aAAaC,UAAtDC,EA1BW,EA0BXA,MAAOC,EA1BI,EA0BJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACnDW,EAAQ,IAAOF,EAAP,IACRG,EAAYC,mBAASN,EAAOE,EAASK,wBAAcH,EAAUX,IACrE,OACE,kBAAC,IAAD,CACEN,SAAUL,EAAUM,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDiB,cAAeH,M,kCCtCrB,kGAuBeI,UAlBE,SAACC,GAAW,IAEfC,EADSD,EAARE,KACeC,mBAChBC,EAAM,IAAIC,KAAKA,KAAKC,MAAML,EAASM,WACzC,OACI,6BACI,kBAAC,IAAD,MACA,yBAAKjC,UAAS,mBACV,wBAAIA,UAAS,eAAkB2B,EAASO,WACxC,yBAAKlC,UAAS,6BACV,uBAAGA,UAAS,gBAAmB2B,EAASQ,YAD5C,MAC8D,uBAAGnC,UAAS,cAAiB8B,EAAKM,iBAEhG,uBAAGpC,UAAS,gBAAmBqC,wBAAyB,CAACC,OAAOX,EAASY,YAAYC,wBAAwBC,SAEjH,kBAAC,IAAD,QAMT,IAAMC,EAAS","file":"component---src-templates-blog-posts-de-js-c8d23540677a3539c704.js","sourcesContent":["import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\n\nconst FooterDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n      query footerDe {\n        allContentfulMainNav(filter: {node_locale: {eq: \"en-US\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        site {\n              siteMetadata {\n                title,\n                description,\n                languages {\n                  defaultLangKey\n                  langs\n                }\n              }\n        }\n      }\n    `);\n\n  const legalLinks = [\n    <li className=\"legal-navigation__item\" key={'legalNavItem1'}><a href=\"/privacy-notice\">Privacy notice</a></li>,\n    <li className=\"legal-navigation__item\" key={'legalNavItem2'}><a href=\"/modern-slavery-policy\">Modern Slavery policy</a></li>,\n    <li className=\"legal-navigation__item\" key={'legalNavItem3'}><a href=\"/brand\">Brand resources</a></li>,\n  ];\n\n  return (\n    <FooterLayout\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      legalLinks={legalLinks}\n    >\n    </FooterLayout>\n  );\n}\n\nexport default FooterDe\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey, getLangs, getUrlForLang} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerDe {\n          allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    const homeLink = `/${langKey}/`;\n    const langsMenu = getLangs(langs, langKey, getUrlForLang(homeLink, url));\n  return (\n    <HeaderLayout\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      switcherLinks={langsMenu}\n    >\n    </HeaderLayout>\n  );\n}\n\nexport default HeaderDe\n","import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport HeaderDe from \"../components/header.de-DE\";\nimport FooterDe from \"../components/footer.de-DE\";\n\nconst BlogPost = (props) => {\n        const {data} = props;\n        const blogPost = data.contentfulBlogPost;\n        const date =new Date(Date.parse(blogPost.blogDate));\n        return (\n            <div>\n                <HeaderDe />\n                <div className={`blog__container`}>\n                    <h1 className={`blog__title`}>{blogPost.blogTitle}</h1>\n                    <div className={`blog__author-date-wrapper`}>\n                        <p className={`blog__author`}>{blogPost.blogAuthor}</p> | <p className={`blog__date`}>{date.toDateString()}</p>\n                    </div>\n                    <p className={`blog__content`} dangerouslySetInnerHTML={{__html:blogPost.blogContent.childContentfulRichText.html}}></p>\n                </div>\n                <FooterDe />\n            </div>\n        )\n}\nexport default BlogPost\n\nexport const pageQuery = graphql`\n    query BlogPostDe($slug: String!){\n         contentfulBlogPost(slug: {eq: $slug}, node_locale: {eq: \"de\"}) {\n            blogTitle\n            blogDate\n            blogAuthor\n            slug\n            node_locale\n            blogContent {\n              childContentfulRichText {\n                html\n              }\n            }\n          }\n    }\n`\n"],"sourceRoot":""}