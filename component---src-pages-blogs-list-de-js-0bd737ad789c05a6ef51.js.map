{"version":3,"sources":["webpack:///./src/components/articleList_layout.js","webpack:///./node_modules/core-js/modules/es7.string.pad-start.js","webpack:///./node_modules/core-js/modules/_string-pad.js","webpack:///./src/pages/blogs-list.de.js","webpack:///./src/components/footer.de-DE.js","webpack:///./node_modules/core-js/modules/_string-repeat.js","webpack:///./src/components/header.de-DE.js"],"names":["articleListLayout","props","className","title","articlesIntro","map","item","i","content","j","nodeType","key","value","articles","blog","date","Date","parse","node","blogDate","to","homeLink","slug","blogTitle","getMonth","toString","padStart","getFullYear","blogAuthor","blogPostOverview","$export","$pad","userAgent","WEBKIT_BUG","test","P","F","maxLength","this","arguments","length","undefined","toLength","repeat","defined","module","exports","that","fillString","left","S","String","stringLength","fillStr","intMaxLength","fillLen","stringFiller","call","Math","ceil","slice","BlogListDe","children","location","data","url","window","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","blogPosts","allContentfulBlogPost","edges","blogList","allContentfulBlogList","blogListTitle","childContentfulBlogListBlogListContentRichTextNode","json","FooterDe","dataQuery","navLinks","allContentfulMainNav","navItems","legalLinks","allContentfulLegalNav","switcherLinks","toInteger","count","str","res","n","Infinity","RangeError","HeaderDe"],"mappings":"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","file":"component---src-pages-blogs-list-de-js-0bd737ad789c05a6ef51.js","sourcesContent":["import React from \"react\"\nimport {Link} from \"gatsby\"\n\nconst articleListLayout = (props) => (\n  <div className={\"articlesList\"}>\n    <h2>{props.title}</h2>\n    {props.articlesIntro.map((item, i) => {\n      return item.content.map((content, j) => {\n        if(item.nodeType === \"paragraph\") {\n          return (<p key={`articlesList_IntroPara_${i}_${j}`}>{content.value}</p>);\n        }\n        return [];\n      });\n    })}\n    <ul className={`blogs__list`}>\n    {props.articles.map(blog => {\n        const date = new Date(Date.parse(blog.node.blogDate));\n        return (\n          <li key={`articlesList_${blog.node.blogDate}`}>\n            <article>\n              <Link to={`${props.homeLink}${blog.node.slug}`}>{blog.node.blogTitle}</Link>\n              <div className={'articlesList_metaData'}>\n                <span>{(date.getMonth() + 1).toString().padStart(2, \"0\")}/{date.getFullYear()}</span>\n                <span>- {blog.node.blogAuthor}</span>\n              </div>  \n              <p className={'articlesList_blogOverview'}>{blog.node.blogPostOverview.blogPostOverview}</p>\n            </article>\n          </li>\n        )\n      })}\n      </ul>\n  </div>\n)\n\n\nexport default articleListLayout\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","import React from \"react\"\nimport {useStaticQuery, graphql} from \"gatsby\"\nimport HeaderDe from \"../components/header.de-DE\";\nimport ArticleList from \"../components/articleList_layout\";\nimport FooterDe from \"../components/footer.de-DE\";\nimport {getCurrentLangKey} from \"ptz-i18n\";\n\nconst BlogListDe = ({ children, location }) => {\n  const data = useStaticQuery(graphql`\n  query BlogListDe {\n        allContentfulBlogPost(filter: {node_locale: {eq: \"de\"}}) {\n          edges {\n            node {\n              slug,\n              blogTitle,\n              blogAuthor,\n              blogDate,\n              blogPostOverview {\n                blogPostOverview\n              }\n            }\n          }\n        }\n        allContentfulBlogList(filter: {node_locale: {eq: \"de\"}}) {\n          edges {\n            node {\n              blogListTitle\n              childContentfulBlogListBlogListContentRichTextNode {\n                json\n              }\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title,\n            description,\n            languages {\n              defaultLangKey\n              langs\n            }\n          }\n        }\n      }\n  `)\n  const url = typeof window !== 'undefined' ? window.location.pathname : '';\n  const { langs, defaultLangKey } = data.site.siteMetadata.languages;\n  const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n  let homeLink = (langKey === defaultLangKey) ? '' : `/${langKey}/`;\n\n  const blogPosts = data.allContentfulBlogPost.edges;\n  const blogList = data.allContentfulBlogList.edges[0].node;\n\n  return (\n      <div className={`main-container`}>\n          <HeaderDe/>\n          <ArticleList\n            homeLink={homeLink}\n            title={blogList.blogListTitle}\n            articlesIntro={blogList.childContentfulBlogListBlogListContentRichTextNode.json.content}\n            articles={blogPosts}\n          />\n          <FooterDe />\n      </div>\n  )\n}\n\nexport default BlogListDe\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\nimport {getCurrentLangKey} from \"ptz-i18n\";\n\nconst FooterDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n      query footerDe {\n        allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        allContentfulLegalNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title,\n            description,\n            languages {\n              defaultLangKey\n              langs\n            }\n          }\n        }\n      }\n    `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    let homeLink = (langKey === defaultLangKey) ? '/' : `/${langKey}/`;\n  return (\n    <FooterLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    >\n    </FooterLayout>\n  );\n}\n\nexport default FooterDe\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerDe {\n          allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    let homeLink = (langKey === defaultLangKey) ? '/' : `/${langKey}/`;\n  return (\n    <HeaderLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    >\n    </HeaderLayout>\n  );\n}\n\nexport default HeaderDe\n"],"sourceRoot":""}