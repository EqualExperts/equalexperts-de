{"version":3,"sources":["webpack:///./src/components/header.en-US.js","webpack:///./src/components/layout.en-US.js","webpack:///./src/components/footer.en-US.js","webpack:///./src/components/legal_layout.js","webpack:///./src/pages/imprint.en-US.js"],"names":["HeaderDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","navLinks","allContentfulMainNav","edges","node","navItems","switcherLinks","LayoutDe","children","className","FooterUS","legalLinks","allContentfulLegalNav","LegalLayout","props","title","data","map","item","i","content","j","nodeType","key","value","ImprintPage","render","pageData","this","allContentfulModuleTitleAndText","childContentfulModuleTitleAndTextTextRichTextNode","json","React","Component","pageQuery"],"mappings":"2JA6CeA,IAxCE,WACb,IAAMC,EAAS,OAwBTC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAzBpD,EA0BeJ,EAAUK,KAAKC,aAAaC,UAAtDC,EA1BW,EA0BXA,MAAOC,EA1BI,EA0BJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACnDW,EAAYF,IAAYD,EAAkB,GAA/B,IAAwCC,EAAxC,IAEjB,OACE,kBAAC,IAAD,CACEE,SAAUA,EACVC,SAAUb,EAAUc,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDC,cAAeV,M,kCCvCvB,iDAsBeW,IAjBE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAyB,EAAfjB,SAC5B,OACE,yBAAKkB,UAAS,kBACZ,kBAAC,IAAD,MACA,6BAASA,UAAS,WAChB,8BAAOD,IAET,kBAAC,IAAD,S,+FC2CSE,IAlDE,WACb,IAAMtB,EAAS,OAkCPC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAnCtD,EAoCiBJ,EAAUK,KAAKC,aAAaC,UAAtDC,EApCS,EAoCTA,MAAOC,EApCE,EAoCFA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACrDW,EAAYF,IAAYD,EAAkB,GAA/B,IAAwCC,EAAxC,IACjB,OACE,kBAAC,IAAD,CACME,SAAUA,EACVC,SAAUb,EAAUc,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDM,WAAYvB,EAAUwB,sBAAsBT,MAAM,GAAGC,KAAKC,SAC1DC,cAAeV,M,kCCjD3B,yBAmBeiB,IAjBK,SAACC,GAAD,OAClB,yBAAKL,UAAW,eACd,4BAAKK,EAAMC,OACVD,EAAME,KAAKC,KAAI,SAACC,EAAKC,GAClB,OAAOD,EAAKE,QAAQH,KAAI,SAACG,EAASC,GAChC,MAAqB,cAAlBH,EAAKI,SACE,wBAAIC,IAAG,gBAAkBJ,EAAlB,IAAuBE,GAAMD,EAAQI,OAC1B,cAAlBN,EAAKI,SACL,uBAAGC,IAAG,aAAeJ,EAAf,IAAoBE,GAAMD,EAAQI,OAE3C,Y,k+CCJXC,E,gLACJC,OAAA,WAAU,IAGFC,EADWC,KAAKd,MAAdE,KACca,gCAAgC1B,MAAM,GAAGC,KAC/D,OACE,kBAAC,IAAD,CAAUb,SAAUqC,KAAKd,MAAMvB,UAC7B,kBAAC,IAAD,CAAKwB,MAAOY,EAASZ,QACrB,kBAAC,IAAD,CACEA,MAAOY,EAASZ,MAChBC,KAAMW,EAASG,kDAAkDC,KAAKX,Y,GAVtDY,IAAMC,WAiBjBR,YAER,IAAMS,EAAS","file":"component---src-pages-imprint-en-us-js-7f8d90a34b9c34efd2b6.js","sourcesContent":["import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerEn {\n          allContentfulMainNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    const homeLink = (langKey === defaultLangKey) ? '' : `/${langKey}/`;\n\n    return (\n      <HeaderLayout\n        homeLink={homeLink}\n        navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n        switcherLinks={langs}\n      >\n      </HeaderLayout>\n    );\n}\n\nexport default HeaderDe\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport HeaderEn from \"./header.en-US\";\nimport Footer from \"./footer.en-US\";\n\nconst LayoutDe = ({ children, location }) => {\n  return (\n    <div className={`main-container`}>\n      <HeaderEn/>\n      <article className={`content`}>\n        <main>{children}</main>\n      </article>\n      <Footer />\n    </div>\n  )\n}\n\nLayoutDe.propTypes = {\n  children: PropTypes.node.isRequired,\n  location: PropTypes.object,\n}\n\nexport default LayoutDe\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\nimport {getCurrentLangKey} from \"ptz-i18n\";\n\nconst FooterUS = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query footerUS {\n          allContentfulMainNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          allContentfulLegalNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n            siteMetadata {\n              title,\n              description,\n              languages {\n                defaultLangKey\n                langs\n              }\n            }\n          }\n        }\n      `);\n      const url = typeof window !== 'undefined' ? window.location.pathname : '';\n      const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n      const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n      let homeLink = (langKey === defaultLangKey) ? '' : `/${langKey}/`;\n    return (\n      <FooterLayout\n            homeLink={homeLink}\n            navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n            legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n            switcherLinks={langs}\n      >\n      </FooterLayout>\n    );\n}\n\nexport default FooterUS\n","import React from \"react\";\n\nconst LegalLayout = (props) => (\n  <div className={\"legalModule\"}>\n    <h2>{props.title}</h2>\n    {props.data.map((item,i) => {\n        return item.content.map((content, j) => {\n          if(item.nodeType === \"heading-3\") {\n            return (<h3 key={`legalHeading_${i}_${j}`}>{content.value}</h3>);\n          } else if(item.nodeType === \"paragraph\") {\n            return (<p key={`legalPara_${i}_${j}`}>{content.value}</p>);\n          }\n          return [];\n        });\n      })}\n  </div>\n)\n\n\nexport default LegalLayout\n","import React from \"react\"\nimport LayoutUS from \"../components/layout.en-US\"\nimport SEO from \"../components/seo\"\nimport \"../styles/index.scss\"\nimport {graphql} from \"gatsby\"\nimport LegalLayout from \"../components/legal_layout\";\n\n\nclass ImprintPage extends React.Component {\n  render() {\n    \n    const { data } = this.props;\n    const pageData = data.allContentfulModuleTitleAndText.edges[0].node;\n    return (\n      <LayoutUS location={this.props.location}>\n        <SEO title={pageData.title} />\n        <LegalLayout\n          title={pageData.title}\n          data={pageData.childContentfulModuleTitleAndTextTextRichTextNode.json.content}\n        />\n      </LayoutUS>\n    )\n  }\n}\n\nexport default ImprintPage\n\nexport const pageQuery = graphql`\nquery {\n  allContentfulModuleTitleAndText(filter: {node_locale: {eq: \"en-US\"}, title : {eq : \"Imprint\"}}) {\n    edges {\n      node {\n        title\n        childContentfulModuleTitleAndTextTextRichTextNode {\n          json\n        }\n      }\n    }\n  }\n}\n`"],"sourceRoot":""}