{"version":3,"sources":["webpack:///./src/components/contacts_layout.js","webpack:///./src/components/contacts.de-DE.js","webpack:///./src/components/clients_layout.js","webpack:///./src/components/layout.de-DE.js","webpack:///./src/components/clients.de-DE.js","webpack:///./src/pages/index.de.js","webpack:///./src/components/footer.de-DE.js","webpack:///./src/components/roles_layout.js","webpack:///./src/components/header.de-DE.js"],"names":["Clients","props","className","contactCopy","contactIntroductionTitle","contactIntroduction","json","content","map","item","key","value","style","backgroundImage","contactBackgroundImage","file","url","href","contactSectionHeading","name","id","officeLocations","location","node","city","region","tel","email","Contact","dataQuery","allContentfulContactModule","edges","allContentfulOfficeLocation","reverse","title","clientData","src","alt","LayoutDe","children","allContentfulClientsModule","logos","IndexPage","render","data","this","heroModule","allContentfulHeroModule","textModule","allContentfulModuleTextOnly","image","heroImage","module","headingParts","heroHeading","split","dangerouslySetInnerHTML","__html","childContentfulModuleTextOnlyContentRichTextNode","childContentfulRichText","html","componentDidMount","hash","window","setTimeout","decodeURI","replace","element","document","getElementById","scrollIntoView","React","Component","pageQuery","FooterDe","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","navLinks","allContentfulMainNav","navItems","legalLinks","allContentfulLegalNav","switcherLinks","Roles","rolesIntroContent","rolesTitle","rolesIntroduction","roles","role","uri","encodeURI","roleLink","roleTitle","roleImage","HeaderDe"],"mappings":"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","file":"component---src-pages-index-de-js-26f11232f13e98571a71.js","sourcesContent":["import React from \"react\"\n\nconst Clients = props => (\n  <div>\n    <div className={\"module contact\"}>\n      <h2 className={\"module_heading\"}>\n        {props.contactCopy.contactIntroductionTitle}\n      </h2>\n      {props.contactCopy.contactIntroduction.json.content.map(item => {\n        return item.content.map(content => {\n          return (\n            <p className=\"module_intro\" key={content.value}>\n              {content.value}\n            </p>\n          )\n        })\n      })}\n    </div>\n    <div\n      className=\"contact_locations\"\n      style={{\n        backgroundImage: `url('${props.contactCopy.contactBackgroundImage.file.url}')`,\n      }}\n    >\n      <a\n        href={`#${props.contactCopy.contactSectionHeading}`}\n        className={\"inPageLink\"}\n        name={props.contactCopy.contactSectionHeading}\n        id={props.contactCopy.contactSectionHeading}\n      >\n        &nbsp;\n      </a>\n      <h2 className=\"module_heading\">\n        {props.contactCopy.contactSectionHeading}\n      </h2>\n      <div className=\"contact_locationsContainers\">\n        {props.officeLocations.map(location => {\n          return (\n            <div className={\"contact_location\"} key={location.node.city}>\n              <h3 className=\"contact__region\">{location.node.region}</h3>\n              <h4 className=\"contact__city\">{location.node.city}</h4>\n              <a className=\"contact__tel\" href={`tel:${location.node.tel}`}>\n                {location.node.tel}\n              </a>\n              <a className=\"contact__email\" href=\"mailto:{location.node.email}\">\n                {location.node.email}\n              </a>\n              {/* <a href={location.node.link} className=\"btn btn--secondary\">\n                  {location.node.linkText}\n              </a> */}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  </div>\n)\n\nexport default Clients\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport ContactsLayout from \"./contacts_layout\"\n\nconst Contact = props => {\n  const dataQuery = useStaticQuery(graphql`\n    query ContactsQueryDe {\n      allContentfulContactModule(filter: { node_locale: { eq: \"de\" } }) {\n        edges {\n          node {\n            contactIntroductionTitle\n            contactIntroduction {\n              json\n            }\n            contactSectionHeading\n            contactBackgroundImage {\n              title\n              description\n              file {\n                url\n              }\n            }\n          }\n        }\n      }\n      allContentfulOfficeLocation(filter: { node_locale: { eq: \"de\" } }) {\n        edges {\n          node {\n            region\n            city\n            tel\n            email\n            linkText\n            link\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <ContactsLayout\n      contactCopy={dataQuery.allContentfulContactModule.edges[0].node}\n      officeLocations={dataQuery.allContentfulOfficeLocation.edges.reverse()}\n    />\n  )\n}\n\nexport default Contact\n","import React from \"react\"\n\nconst Clients = props => (\n  <div className={\"module client_container\"}>\n    <a\n      href={`#${props.title}`}\n      className={\"inPageLink\"}\n      name={props.title}\n      id={props.title}\n    >\n      &nbsp;\n    </a>\n    <h2 className={\"module_heading\"}>{props.title}</h2>\n    <ul className={\"client_list\"}>\n      {props.clientData.map(item => {\n        return (\n          <li className={\"client_item\"} key={item.title}>\n            <img src={item.file.url} alt={item.title} />\n          </li>\n        )\n      })}\n    </ul>\n  </div>\n)\n\nexport default Clients\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport HeaderDe from \"./header.de-DE\"\nimport FooterDe from \"./footer.de-DE\"\n\nconst LayoutDe = ({ children, location }) => {\n  return (\n    <div className={`main-container`}>\n      <HeaderDe />\n      <article className={`content`}>\n        <main>{children}</main>\n      </article>\n      <FooterDe />\n    </div>\n  )\n}\n\nLayoutDe.propTypes = {\n  children: PropTypes.node.isRequired,\n  location: PropTypes.object,\n}\n\nexport default LayoutDe\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport ClientsLayout from \"./clients_layout\"\n\nconst Clients = props => {\n  const dataQuery = useStaticQuery(graphql`\n    query ClientsQueryDe {\n      allContentfulClientsModule(filter: { node_locale: { eq: \"de\" } }) {\n        edges {\n          node {\n            title\n            logos {\n              title\n              description\n              file {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <ClientsLayout\n      clientData={dataQuery.allContentfulClientsModule.edges[0].node.logos}\n      title={dataQuery.allContentfulClientsModule.edges[0].node.title}\n    />\n  )\n}\n\nexport default Clients\n","import React from \"react\"\nimport LayoutDe from \"../components/layout.de-DE\"\nimport SEO from \"../components/seo\"\nimport Clients from \"../components/clients.de-DE\"\nimport Contacts from \"../components/contacts.de-DE\"\nimport Roles from \"../components/roles.de-DE\"\nimport \"../styles/index.scss\"\nimport { graphql } from \"gatsby\"\n\nclass IndexPage extends React.Component {\n  render() {\n    const { data } = this.props\n    //const modules = data.allContentfulModuleTextandCta.edges;\n    const heroModule = data.allContentfulHeroModule.edges\n    const textModule = data.allContentfulModuleTextOnly.edges[0]\n    return (\n      <LayoutDe location={this.props.location}>\n        <SEO title=\"Home\" image={heroModule[0].node.heroImage.file.url} />\n        {heroModule.map(module => {\n          const headingParts = module.node.heroHeading.split(/(?<=\\.)/)\n          return (\n            <div className={`hero__container`} key={module}>\n              <img\n                className={`hero__image`}\n                src={`${module.node.heroImage.file.url}`}\n                alt={``}\n              />\n              <h1 className={`hero__title`}>\n                {headingParts[0]}\n                <span className=\"hero__lastLine\">{headingParts[1]}</span>\n              </h1>\n            </div>\n          )\n        })}\n        {\n          <div\n            className={`simple-text-module`}\n            dangerouslySetInnerHTML={{\n              __html:\n                textModule.node.childContentfulModuleTextOnlyContentRichTextNode\n                  .childContentfulRichText.html,\n            }}\n          ></div>\n        }\n        <Clients />\n        <Contacts />\n        {/* <Roles></Roles> */}\n      </LayoutDe>\n    )\n  }\n  componentDidMount() {\n    const { hash } = window.location\n    if (hash !== \"\") {\n      setTimeout(() => {\n        const id = decodeURI(hash.replace(\"#\", \"\"))\n        const element = document.getElementById(id)\n        if (element) element.scrollIntoView()\n      }, 0)\n    }\n  }\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allContentfulModuleTextandCta(filter: { node_locale: { eq: \"de\" } }) {\n      edges {\n        node {\n          moduleTitle\n          moduleContent {\n            childContentfulRichText {\n              html\n            }\n          }\n          moduleCtAlink {\n            childContentfulRichText {\n              html\n            }\n          }\n        }\n      }\n    }\n    allContentfulHeroModule(filter: { node_locale: { eq: \"de\" } }) {\n      edges {\n        node {\n          heroHeading\n          heroImage {\n            file {\n              url\n            }\n          }\n        }\n      }\n    }\n    allContentfulModuleTextOnly(filter: { node_locale: { eq: \"de\" } }) {\n      edges {\n        node {\n          childContentfulModuleTextOnlyContentRichTextNode {\n            childContentfulRichText {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\"\nimport { getCurrentLangKey } from \"ptz-i18n\"\n\nconst FooterDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n    query footerDe {\n      allContentfulMainNav(filter: { node_locale: { eq: \"de\" } }) {\n        edges {\n          node {\n            navItems {\n              navItemText\n              navItemUrl\n            }\n          }\n        }\n      }\n      allContentfulLegalNav(filter: { node_locale: { eq: \"de\" } }) {\n        edges {\n          node {\n            navItems {\n              navItemText\n              navItemUrl\n            }\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          title\n          description\n          languages {\n            defaultLangKey\n            langs\n          }\n        }\n      }\n    }\n  `)\n  const url = typeof window !== \"undefined\" ? window.location.pathname : \"\"\n  const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages\n  const langKey = getCurrentLangKey(langs, defaultLangKey, url)\n  let homeLink = langKey === defaultLangKey ? \"/\" : `/${langKey}/`\n  return (\n    <FooterLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    ></FooterLayout>\n  )\n}\n\nexport default FooterDe\n","import React from \"react\"\n\nconst Roles = props => (\n  <div>\n    <div className={\"module roles\"}>\n      <a\n        href={`#${props.rolesIntroContent.rolesTitle}`}\n        className={\"inPageLink\"}\n        name={props.rolesIntroContent.rolesTitle}\n        id={props.rolesIntroContent.rolesTitle}\n      >\n        &nbsp;\n      </a>\n      <h2 className={\"module_heading\"}>{props.rolesIntroContent.rolesTitle}</h2>\n      {props.rolesIntroContent.rolesIntroduction.json.content.map(item => {\n        return item.content.map(content => {\n          return (\n            <p className=\"module_intro\" key={content.value}>\n              {content.value}\n            </p>\n          )\n        })\n      })}\n    </div>\n    <div className=\"roleTypes\">\n      {props.roles.map(role => {\n        let uri = encodeURI(`${props.homeLink}${role.node.roleLink}`)\n        let key = `roleType_${role.node.roleTitle}`\n        let image = \"\"\n        if (role.node.roleImage) {\n          image = role.node.roleImage.file.url\n        }\n        return (\n          <a\n            style={{\n              backgroundImage: `url(${image})`,\n            }}\n            key={key}\n            href={uri}\n            className={\"roleTypes_type\"}\n          >\n            {role.node.roleTitle}\n          </a>\n        )\n      })}\n    </div>\n  </div>\n)\n\nexport default Roles\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport { getCurrentLangKey } from \"ptz-i18n\"\nimport HeaderLayout from \"./header_layout\"\n\nconst HeaderDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n    query headerDe {\n      allContentfulMainNav(filter: { node_locale: { eq: \"de\" } }) {\n        edges {\n          node {\n            navItems {\n              navItemText\n              navItemUrl\n            }\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          title\n          description\n          languages {\n            defaultLangKey\n            langs\n          }\n        }\n      }\n    }\n  `)\n  const url = typeof window !== \"undefined\" ? window.location.pathname : \"\";\n  const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n  const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n  let homeLink = langKey === defaultLangKey ? \"/\" : `/${langKey}/`\n\n  return (\n    <HeaderLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    ></HeaderLayout>\n  )\n}\n\nexport default HeaderDe\n"],"sourceRoot":""}