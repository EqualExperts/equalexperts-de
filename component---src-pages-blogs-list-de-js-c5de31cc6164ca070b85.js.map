{"version":3,"sources":["webpack:///./src/pages/blogs-list.de.js","webpack:///./src/components/footer.de-DE.js","webpack:///./src/components/header.de-DE.js"],"names":["BlogListDe","children","data","location","blogPosts","allContentfulBlogPost","edges","blogList","allContentfulBlogList","node","className","blogListTitle","dangerouslySetInnerHTML","__html","childContentfulBlogListBlogListContentRichTextNode","childContentfulRichText","html","map","blog","date","Date","parse","blogDate","getMonth","getFullYear","to","slug","blogTitle","blogAuthor","blogContent","FooterDe","dataQuery","navLinks","allContentfulMainNav","navItems","legalLinks","allContentfulLegalNav","HeaderDe","url","window","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","langsMenu","getLangs","getUrlForLang","switcherLinks"],"mappings":"4xBAoEeA,UA9DI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SACZC,GADqC,EAAfC,SAClB,QA+BJC,EAAWF,EAAKG,sBAAsBC,MACtCC,EAAWL,EAAKM,sBAAsBF,MAAM,GAAGG,KAErD,OACI,yBAAKC,UAAS,kBACV,kBAAC,IAAD,MACA,6BAASA,UAAS,WACd,8BAAOT,GACP,wBAAIS,UAAS,sBAAyBH,EAASI,eAC/C,yBAAKD,UAAS,mBAAsBE,wBAAyB,CAACC,OAAQN,EAASO,mDAAmDC,wBAAwBC,QAC1J,wBAAIN,UAAS,eACRN,EAAUa,KAAI,SAACC,GACZ,IAAMC,EAAO,IAAIC,KAAKA,KAAKC,MAAMH,EAAKT,KAAKa,WAC3C,OAAO,4BAAI,8BAAOH,EAAKI,WAAa,EAAzB,IAA6BJ,EAAKK,eAAqB,kBAAC,OAAD,CAC9DC,GAAE,MAAQP,EAAKT,KAAKiB,MAASR,EAAKT,KAAKkB,WAAiB,2CAAiBT,EAAKT,KAAKmB,YACvF,uBAAGlB,UAAS,qBAAwBE,wBAAyB,CAACC,OAAOK,EAAKT,KAAKoB,YAAYd,wBAAwBC,cAK/H,kBAAC,IAAD,S,mFCpBGc,IAlCE,WACf,IAAMC,EAAS,OAwBf,OACE,kBAAC,IAAD,CACEC,SAAUD,EAAUE,qBAAqB3B,MAAM,GAAGG,KAAKyB,SACvDC,WAAYJ,EAAUK,sBAAsB9B,MAAM,GAAGG,KAAKyB,a,g2RCYjDG,IAvCE,WACb,IAAMN,EAAS,OAwBTO,EAAwB,oBAAXC,OAAyBA,OAAOpC,SAASqC,SAAW,GAzBpD,EA0BeT,EAAUU,KAAKC,aAAaC,UAAtDC,EA1BW,EA0BXA,MAAOC,EA1BI,EA0BJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBP,GACnDU,EAAQ,IAAOF,EAAP,IACRG,EAAYC,mBAASN,EAAOE,EAASK,wBAAcH,EAAUV,IACrE,OACE,kBAAC,IAAD,CACEN,SAAUD,EAAUE,qBAAqB3B,MAAM,GAAGG,KAAKyB,SACvDkB,cAAeH","file":"component---src-pages-blogs-list-de-js-c5de31cc6164ca070b85.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {useStaticQuery, graphql, Link} from \"gatsby\"\nimport HeaderDe from \"../components/header.de-DE\";\nimport FooterDe from \"../components/footer.de-DE\";\n\nconst BlogListDe = ({ children, location }) => {\n    const data = useStaticQuery(graphql`\n    query BlogListDe {\n          allContentfulBlogPost(filter: {node_locale: {eq: \"de\"}}) {\n            edges {\n              node {\n                slug,\n                blogTitle,\n                blogAuthor,\n                blogDate,\n                blogContent {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n              }\n            }\n          }\n          allContentfulBlogList(filter: {node_locale: {eq: \"de\"}}) {\n            edges {\n              node {\n                blogListTitle\n                childContentfulBlogListBlogListContentRichTextNode {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n              }\n            }\n          }\n        }\n  `)\n    const blogPosts =data.allContentfulBlogPost.edges;\n    const blogList = data.allContentfulBlogList.edges[0].node;\n\n    return (\n        <div className={`main-container`}>\n            <HeaderDe/>\n            <article className={`content`}>\n                <main>{children}</main>\n                <h1 className={`blog-list__heading`}>{blogList.blogListTitle}</h1>\n                <div className={`blog-list__title`} dangerouslySetInnerHTML={{__html: blogList.childContentfulBlogListBlogListContentRichTextNode.childContentfulRichText.html}}/>\n                <ul className={`blogs__list`}>\n                    {blogPosts.map((blog)=> {\n                        const date = new Date(Date.parse(blog.node.blogDate));\n                        return <li><span>{date.getMonth() + 1}/{date.getFullYear()}</span><Link\n                            to={`de/${blog.node.slug}`}>{blog.node.blogTitle}</Link><span> Author - {blog.node.blogAuthor}</span>\n                        <p className={`blog-list__content`} dangerouslySetInnerHTML={{__html:blog.node.blogContent.childContentfulRichText.html}} />\n                        </li>\n                })}\n                </ul>\n            </article>\n            <FooterDe />\n        </div>\n    )\n}\n\nBlogListDe.propTypes = {\n    children: PropTypes.node.isRequired,\n    location: PropTypes.object,\n}\n\nexport default BlogListDe\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\n\nconst FooterDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n      query footerDe {\n        allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        allContentfulLegalNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n      }\n    `);\n  return (\n    <FooterLayout\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n    >\n    </FooterLayout>\n  );\n}\n\nexport default FooterDe\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey, getLangs, getUrlForLang} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerDe {\n          allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    const homeLink = `/${langKey}/`;\n    const langsMenu = getLangs(langs, langKey, getUrlForLang(homeLink, url));\n  return (\n    <HeaderLayout\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      switcherLinks={langsMenu}\n    >\n    </HeaderLayout>\n  );\n}\n\nexport default HeaderDe\n"],"sourceRoot":""}