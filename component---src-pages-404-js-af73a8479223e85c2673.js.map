{"version":3,"sources":["webpack:///./src/components/footer.de-DE.js","webpack:///./src/components/header.de-DE.js","webpack:///./src/components/layout.js","webpack:///./src/pages/404.js"],"names":["FooterDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","navLinks","allContentfulMainNav","edges","node","navItems","legalLinks","allContentfulLegalNav","switcherLinks","HeaderDe","Layout","children","className","NotFoundPage","title"],"mappings":"wJAuDeA,IAlDE,WACf,IAAMC,EAAS,OAkCPC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAnCpD,EAoCeJ,EAAUK,KAAKC,aAAaC,UAAtDC,EApCW,EAoCXA,MAAOC,EApCI,EAoCJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACrDW,EAAYF,IAAYD,EAAkB,IAA/B,IAAyCC,EAAzC,IACjB,OACE,kBAAC,IAAD,CACEE,SAAUA,EACVC,SAAUb,EAAUc,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDC,WAAYlB,EAAUmB,sBAAsBJ,MAAM,GAAGC,KAAKC,SAC1DG,cAAeZ,M,y5CCLNa,IAvCE,WACb,IAAMrB,EAAS,OAwBTC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAzBpD,EA0BeJ,EAAUK,KAAKC,aAAaC,UAAtDC,EA1BW,EA0BXA,MAAOC,EA1BI,EA0BJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACrDW,EAAYF,IAAYD,EAAkB,IAA/B,IAAyCC,EAAzC,IACjB,OACE,kBAAC,IAAD,CACEE,SAAUA,EACVC,SAAUb,EAAUc,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDG,cAAeZ,M,sGChBNc,EAjBA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAyB,EAAfpB,SAC1B,OACE,yBAAKqB,UAAS,kBACZ,kBAAC,IAAD,MACA,6BAASA,UAAS,WAChB,8BAAOD,IAET,kBAAC,IAAD,Q,YCCSE,UARM,kBACnB,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,mBACX,yCACA","file":"component---src-pages-404-js-af73a8479223e85c2673.js","sourcesContent":["import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\nimport {getCurrentLangKey} from \"ptz-i18n\";\n\nconst FooterDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n      query footerDe {\n        allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        allContentfulLegalNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title,\n            description,\n            languages {\n              defaultLangKey\n              langs\n            }\n          }\n        }\n      }\n    `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    let homeLink = (langKey === defaultLangKey) ? '/' : `/${langKey}/`;\n  return (\n    <FooterLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    >\n    </FooterLayout>\n  );\n}\n\nexport default FooterDe\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerDe {\n          allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    let homeLink = (langKey === defaultLangKey) ? '/' : `/${langKey}/`;\n  return (\n    <HeaderLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    >\n    </HeaderLayout>\n  );\n}\n\nexport default HeaderDe\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport HeaderDe from \"./header.de-DE\"\nimport FooterDe from \"./footer.de-DE\";\n\nconst Layout = ({ children, location }) => {\n  return (\n    <div className={`main-container`}>\n      <HeaderDe/>\n      <article className={`content`}>\n        <main>{children}</main>\n      </article>\n      <FooterDe />\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  location: PropTypes.object,\n}\n\nexport default Layout\n","import React from \"react\"\nimport \"../styles/index.scss\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}