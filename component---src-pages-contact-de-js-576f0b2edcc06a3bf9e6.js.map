{"version":3,"sources":["webpack:///./src/components/footer.de-DE.js","webpack:///./src/pages/contact.de.js","webpack:///./src/components/header.de-DE.js"],"names":["FooterDe","dataQuery","legalLinks","className","key","href","navLinks","allContentfulMainNav","edges","node","navItems","Contact","children","data","location","allContentfulContact","contactHeading","dangerouslySetInnerHTML","__html","childContentfulContactContactBodyContentRichTextNode","childContentfulRichText","html","childContentfulContactContactAddressRichTextNode","HeaderDe","url","window","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","langsMenu","getLangs","getUrlForLang","switcherLinks"],"mappings":"uvCA6CeA,IAzCE,WACf,IAAMC,EAAS,OAyBTC,EAAa,CACjB,wBAAIC,UAAU,yBAAyBC,IAAK,iBAAiB,uBAAGC,KAAK,mBAAR,mBAC7D,wBAAIF,UAAU,yBAAyBC,IAAK,iBAAiB,uBAAGC,KAAK,0BAAR,0BAC7D,wBAAIF,UAAU,yBAAyBC,IAAK,iBAAiB,uBAAGC,KAAK,UAAR,qBAG/D,OACE,kBAAC,IAAD,CACEC,SAAUL,EAAUM,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDR,WAAYA,M,ymBCUHS,UA3CC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SACTC,GADkC,EAAfC,SACf,QAqBV,OACI,yBAAKX,UAAS,kBACV,kBAAC,IAAD,MACA,6BAASA,UAAS,WACd,8BAAOS,GACP,wBAAIT,UAAS,oBAAuBU,EAAKE,qBAAqBP,MAAM,GAAGC,KAAKO,gBAC5E,yBAAKb,UAAS,4BACd,yBAAKA,UAAS,mBAAsBc,wBAAyB,CAACC,OAAOL,EAAKE,qBAAqBP,MAAM,GAAGC,KAAKU,qDAAqDC,wBAAwBC,QAC1L,yBAAKlB,UAAS,mBAAsBc,wBAAyB,CAACC,OAAOL,EAAKE,qBAAqBP,MAAM,GAAGC,KAAKa,iDAAiDF,wBAAwBC,UAG1L,kBAAC,IAAD,S,4lBCKGE,IAvCE,WACb,IAAMtB,EAAS,OAwBTuB,EAAwB,oBAAXC,OAAyBA,OAAOX,SAASY,SAAW,GAzBpD,EA0BezB,EAAU0B,KAAKC,aAAaC,UAAtDC,EA1BW,EA0BXA,MAAOC,EA1BI,EA0BJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBP,GACnDU,EAAQ,IAAOF,EAAP,IACRG,EAAYC,mBAASN,EAAOE,EAASK,wBAAcH,EAAUV,IACrE,OACE,kBAAC,IAAD,CACElB,SAAUL,EAAUM,qBAAqBC,MAAM,GAAGC,KAAKC,SACvD4B,cAAeH","file":"component---src-pages-contact-de-js-576f0b2edcc06a3bf9e6.js","sourcesContent":["import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\n\nconst FooterDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n      query footerDe {\n        allContentfulMainNav(filter: {node_locale: {eq: \"en-US\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        site {\n              siteMetadata {\n                title,\n                description,\n                languages {\n                  defaultLangKey\n                  langs\n                }\n              }\n        }\n      }\n    `);\n\n  const legalLinks = [\n    <li className=\"legal-navigation__item\" key={'legalNavItem1'}><a href=\"/privacy-notice\">Privacy notice</a></li>,\n    <li className=\"legal-navigation__item\" key={'legalNavItem2'}><a href=\"/modern-slavery-policy\">Modern Slavery policy</a></li>,\n    <li className=\"legal-navigation__item\" key={'legalNavItem3'}><a href=\"/brand\">Brand resources</a></li>,\n  ];\n\n  return (\n    <FooterLayout\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      legalLinks={legalLinks}\n    >\n    </FooterLayout>\n  );\n}\n\nexport default FooterDe\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {graphql, useStaticQuery} from \"gatsby\"\nimport HeaderDe from \"../components/header.de-DE\";\nimport FooterDe from \"../components/footer.de-DE\";\n\nconst Contact = ({ children, location }) => {\n    const data =useStaticQuery(graphql`\n        query ContactUsQueryDe {\n            allContentfulContact(filter: {node_locale: {eq: \"de\"}}) {\n            edges {\n              node {\n                contactHeading\n                childContentfulContactContactBodyContentRichTextNode {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n                childContentfulContactContactAddressRichTextNode {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n              }\n            }\n          }\n        }\n      `);\n    return (\n        <div className={`main-container`}>\n            <HeaderDe/>\n            <article className={`content`}>\n                <main>{children}</main>\n                <h1 className={`contact__heading`}>{data.allContentfulContact.edges[0].node.contactHeading}</h1>\n                <div className={`contact__content-wrapper`}>\n                <div className={`contact__content`} dangerouslySetInnerHTML={{__html:data.allContentfulContact.edges[0].node.childContentfulContactContactBodyContentRichTextNode.childContentfulRichText.html}}/>\n                <div className={`contact__address`} dangerouslySetInnerHTML={{__html:data.allContentfulContact.edges[0].node.childContentfulContactContactAddressRichTextNode.childContentfulRichText.html}}/>\n                </div>\n            </article>\n            <FooterDe />\n        </div>\n    )\n}\n\nContact.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object,\n}\n\nexport default Contact;\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey, getLangs, getUrlForLang} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerDe {\n          allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    const homeLink = `/${langKey}/`;\n    const langsMenu = getLangs(langs, langKey, getUrlForLang(homeLink, url));\n  return (\n    <HeaderLayout\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      switcherLinks={langsMenu}\n    >\n    </HeaderLayout>\n  );\n}\n\nexport default HeaderDe\n"],"sourceRoot":""}