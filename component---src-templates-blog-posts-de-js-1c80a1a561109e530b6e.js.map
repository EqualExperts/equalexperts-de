{"version":3,"sources":["webpack:///./src/components/header.de-DE.js","webpack:///./src/templates/blog-posts.de.js"],"names":["HeaderDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","langsMenu","getLangs","getUrlForLang","switcherLinks","map","lang","i","separatorClass","length","className","to","link","key","selected","navLinks","allContentfulHeaderMenu","edges","node","blogLink","contactLink","BlogPost","props","blogPost","data","contentfulBlogPost","date","Date","parse","blogDate","blogTitle","blogAuthor","toDateString","dangerouslySetInnerHTML","__html","blogContent","childContentfulRichText","html","pageQuery"],"mappings":"qdA6DeA,IAxDE,WACb,IAAMC,EAAS,OAuBTC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAxBpD,EAyBeJ,EAAUK,KAAKC,aAAaC,UAAtDC,EAzBW,EAyBXA,MAAOC,EAzBI,EAyBJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACnDW,EAAQ,IAAOF,EAAP,IACRG,EAAYC,mBAASN,EAAOE,EAASK,wBAAcH,EAAUX,IAC7De,EAAgBH,EAAUI,KAAI,SAACC,EAAMC,GACvC,IAAIC,EAAiBD,EAAIN,EAAUQ,OAAO,EAAI,mCAAqC,KACnF,OACI,wBAAIC,UAAWF,GACX,kBAAC,OAAD,CAAMG,GAAIL,EAAKM,KAAMC,IAAKP,EAAKR,SAC7B,0BAAMgB,SAAUR,EAAKQ,UACC,OAAjBR,EAAKR,QAAiB,KAAK,WAO1CiB,EAAW,CACf,kBAAC,OAAD,CAAMJ,GAAG,kBAAkBD,UAAS,2BAA8BtB,EAAU4B,wBAAwBC,MAAM,GAAGC,KAAKC,UAClH,kBAAC,OAAD,CAAMR,GAAG,eAAeD,UAAS,2BAA8BtB,EAAU4B,wBAAwBC,MAAM,GAAGC,KAAKE,cAGjH,OACE,kBAAC,IAAD,CACEL,SAAUA,EACVX,cAAeA,M,kCCvDrB,kGAuBeiB,UAlBE,SAACC,GAAW,IAEfC,EADSD,EAARE,KACeC,mBAChBC,EAAM,IAAIC,KAAKA,KAAKC,MAAML,EAASM,WACzC,OACI,6BACI,kBAAC,IAAD,MACA,yBAAKnB,UAAS,mBACV,wBAAIA,UAAS,eAAkBa,EAASO,WACxC,yBAAKpB,UAAS,6BACV,uBAAGA,UAAS,gBAAmBa,EAASQ,YAD5C,MAC8D,uBAAGrB,UAAS,cAAiBgB,EAAKM,iBAEhG,uBAAGtB,UAAS,gBAAmBuB,wBAAyB,CAACC,OAAOX,EAASY,YAAYC,wBAAwBC,SAEjH,kBAAC,IAAD,QAMT,IAAMC,EAAS","file":"component---src-templates-blog-posts-de-js-1c80a1a561109e530b6e.js","sourcesContent":["import {graphql, Link, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey, getLangs, getUrlForLang} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerDe {\n          allContentfulHeaderMenu(filter: {node_locale: {eq: \"de\"}}){\n            edges {\n              node {\n                contactLink\n                blogLink\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    const homeLink = `/${langKey}/`;\n    const langsMenu = getLangs(langs, langKey, getUrlForLang(homeLink, url));\n    const switcherLinks = langsMenu.map((lang, i) => {\n        let separatorClass = i < langsMenu.length-1 ? \"header__lang-switcher__separator\" : null;\n        return (\n            <li className={separatorClass}>\n                <Link to={lang.link} key={lang.langKey}>\n                  <span selected={lang.selected}>\n                      {lang.langKey === 'de'?'DE':'EN'}\n                  </span>\n                </Link>\n            </li>\n              )\n          }\n  );\n  const navLinks = [\n    <Link to=\"/de/blogs-list/\" className={`header__navigation-link`}>{dataQuery.allContentfulHeaderMenu.edges[0].node.blogLink}</Link>,\n    <Link to=\"/de/contact/\" className={`header__navigation-link`}>{dataQuery.allContentfulHeaderMenu.edges[0].node.contactLink}</Link>\n  ];\n\n  return (\n    <HeaderLayout\n      navLinks={navLinks}\n      switcherLinks={switcherLinks}\n    >\n    </HeaderLayout>\n  );\n}\n\nexport default HeaderDe\n","import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport HeaderDe from \"../components/header.de-DE\";\nimport FooterDe from \"../components/footer.de-DE\";\n\nconst BlogPost = (props) => {\n        const {data} = props;\n        const blogPost = data.contentfulBlogPost;\n        const date =new Date(Date.parse(blogPost.blogDate));\n        return (\n            <div>\n                <HeaderDe />\n                <div className={`blog__container`}>\n                    <h1 className={`blog__title`}>{blogPost.blogTitle}</h1>\n                    <div className={`blog__author-date-wrapper`}>\n                        <p className={`blog__author`}>{blogPost.blogAuthor}</p> | <p className={`blog__date`}>{date.toDateString()}</p>\n                    </div>\n                    <p className={`blog__content`} dangerouslySetInnerHTML={{__html:blogPost.blogContent.childContentfulRichText.html}}></p>\n                </div>\n                <FooterDe />\n            </div>\n        )\n}\nexport default BlogPost\n\nexport const pageQuery = graphql`\n    query BlogPostDe($slug: String!){\n         contentfulBlogPost(slug: {eq: $slug}, node_locale: {eq: \"de\"}) {\n            blogTitle\n            blogDate\n            blogAuthor\n            slug\n            node_locale\n            blogContent {\n              childContentfulRichText {\n                html\n              }\n            }\n          }\n    }\n`\n"],"sourceRoot":""}