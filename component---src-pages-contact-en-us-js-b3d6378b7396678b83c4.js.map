{"version":3,"sources":["webpack:///./src/components/header.en-US.js","webpack:///./src/pages/contact.en-US.js"],"names":["HeaderDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","links","getLangs","getUrlForLang","map","lang","to","link","key","selected","className","src","image","alt","allContentfulHeaderMenu","edges","node","blogLink","contactLink","Contact","children","data","allContentfulContact","contactHeading","dangerouslySetInnerHTML","__html","childContentfulContactContactBodyContentRichTextNode","childContentfulRichText","html","childContentfulContactContactAddressRichTextNode"],"mappings":"yLAkEeA,IA7DE,WACb,IAAMC,EAAS,OAsBTC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAvBpD,EAwBeJ,EAAUK,KAAKC,aAAaC,UAAtDC,EAxBW,EAwBXA,MAAOC,EAxBI,EAwBJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACnDW,EAAQ,IAAOF,EAAP,IAERG,EADYC,mBAASN,EAAOE,EAASK,wBAAcH,EAAUX,IAC3Ce,KAAI,SAACC,GACrB,OACI,4BACI,kBAAC,OAAD,CAAMC,GAAID,EAAKE,KAAMC,IAAKH,EAAKP,SAC7B,0BAAMW,SAAUJ,EAAKI,UAClBJ,EAAKP,cAQ1B,OACI,4BAAQY,UAAS,UACb,yBAAKA,UAAS,2BACV,kBAAC,OAAD,CAAMJ,GAAI,KACN,yBAAKI,UAAS,eAAkBC,IAAKC,IAAOC,IAAG,wBAEnD,yBAAKH,UAAS,sBACV,kBAAC,OAAD,CAAMJ,GAAG,kBAAkBI,UAAS,2BAA8BtB,EAAU0B,wBAAwBC,MAAM,GAAGC,KAAKC,UAClH,kBAAC,OAAD,CAAMX,GAAG,eAAeI,UAAS,2BAA8BtB,EAAU0B,wBAAwBC,MAAM,GAAGC,KAAKE,cAEnH,yBAAKR,UAAS,yBACV,4BACKT,Q,sGCTVkB,UA3CC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SACTC,GADkC,EAAf9B,SACf,QAqBV,OACI,yBAAKmB,UAAS,kBACV,kBAAC,IAAD,MACA,6BAASA,UAAS,WACd,8BAAOU,GACP,wBAAIV,UAAS,oBAAuBW,EAAKC,qBAAqBP,MAAM,GAAGC,KAAKO,gBAC5E,yBAAKb,UAAS,4BACV,yBAAKA,UAAS,mBAAsBc,wBAAyB,CAACC,OAAOJ,EAAKC,qBAAqBP,MAAM,GAAGC,KAAKU,qDAAqDC,wBAAwBC,QAC1L,yBAAKlB,UAAS,mBAAsBc,wBAAyB,CAACC,OAAOJ,EAAKC,qBAAqBP,MAAM,GAAGC,KAAKa,iDAAiDF,wBAAwBC,UAG9L,kBAAC,IAAD,S","file":"component---src-pages-contact-en-us-js-b3d6378b7396678b83c4.js","sourcesContent":["import {graphql, Link, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport image from '../images/logo.svg'\nimport {getCurrentLangKey, getLangs, getUrlForLang} from \"ptz-i18n\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerEn {\n          allContentfulHeaderMenu(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                contactLink\n                blogLink\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    const homeLink = `/${langKey}/`;\n    const langsMenu = getLangs(langs, langKey, getUrlForLang(homeLink, url));\n    const links = langsMenu.map((lang) => {\n            return (\n                <li>\n                    <Link to={lang.link} key={lang.langKey}>\n                      <span selected={lang.selected}>\n                        {lang.langKey}\n                      </span>\n                    </Link>\n                </li>\n            )\n        }\n    );\n\n    return (\n        <header className={`header`}>\n            <div className={`header__content-wrapper`}>\n                <Link to={'/'}>\n                    <img className={`header__logo`} src={image} alt={`Equal Experts logo`} />\n                </Link>\n                <nav className={`header__navigation`}>\n                    <Link to=\"/de/blogs-list/\" className={`header__navigation-link`}>{dataQuery.allContentfulHeaderMenu.edges[0].node.blogLink}</Link>\n                    <Link to=\"/de/contact/\" className={`header__navigation-link`}>{dataQuery.allContentfulHeaderMenu.edges[0].node.contactLink}</Link>\n                </nav>\n                <div className={`header__lang-switcher`}>\n                    <ul>\n                        {links}\n                    </ul>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default HeaderDe\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {graphql, useStaticQuery} from \"gatsby\"\nimport HeaderEn from \"../components/header.en-US\";\nimport Footer from \"../components/footer\";\n\nconst Contact = ({ children, location }) => {\n    const data =useStaticQuery(graphql`\n        query ContactUsQueryEn {\n            allContentfulContact(filter: {node_locale: {eq: \"en-US\"}}) {\n            edges {\n              node {\n                contactHeading\n                childContentfulContactContactBodyContentRichTextNode {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n                childContentfulContactContactAddressRichTextNode {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n              }\n            }\n          }\n        }\n      `);\n    return (\n        <div className={`main-container`}>\n            <HeaderEn/>\n            <article className={`content`}>\n                <main>{children}</main>\n                <h1 className={`contact__heading`}>{data.allContentfulContact.edges[0].node.contactHeading}</h1>\n                <div className={`contact__content-wrapper`}>\n                    <div className={`contact__content`} dangerouslySetInnerHTML={{__html:data.allContentfulContact.edges[0].node.childContentfulContactContactBodyContentRichTextNode.childContentfulRichText.html}}/>\n                    <div className={`contact__address`} dangerouslySetInnerHTML={{__html:data.allContentfulContact.edges[0].node.childContentfulContactContactAddressRichTextNode.childContentfulRichText.html}}/>\n                </div>\n            </article>\n            <Footer />\n        </div>\n    )\n}\n\nContact.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object,\n}\n\nexport default Contact;"],"sourceRoot":""}