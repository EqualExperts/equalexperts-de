{"version":3,"sources":["webpack:///./src/components/footer.de-DE.js","webpack:///./src/pages/contact.de.js","webpack:///./src/components/header.de-DE.js"],"names":["FooterDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","withPrefix","navLinks","allContentfulMainNav","edges","node","navItems","legalLinks","allContentfulLegalNav","switcherLinks","Contact","children","data","className","allContentfulContact","contactHeading","dangerouslySetInnerHTML","__html","childContentfulContactContactBodyContentRichTextNode","childContentfulRichText","html","childContentfulContactContactAddressRichTextNode","HeaderDe"],"mappings":"+wCAyDeA,IApDE,WACf,IAAMC,EAAS,OAkCPC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAnCpD,EAoCeJ,EAAUK,KAAKC,aAAaC,UAAtDC,EApCW,EAoCXA,MAAOC,EApCI,EAoCJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACrDW,EAAYF,IAAYD,EAAkB,IAA/B,IAAyCC,EAAzC,IAGjB,OAFEE,EAAWC,qBAAWD,GAGtB,kBAAC,IAAD,CACEA,SAAUA,EACVE,SAAUd,EAAUe,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDC,WAAYnB,EAAUoB,sBAAsBJ,MAAM,GAAGC,KAAKC,SAC1DG,cAAeb,M,wGCFNc,UA3CC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SACTC,GADkC,EAAfrB,SACf,QAqBV,OACI,yBAAKsB,UAAS,kBACV,kBAAC,IAAD,MACA,6BAASA,UAAS,WACd,8BAAOF,GACP,wBAAIE,UAAS,oBAAuBD,EAAKE,qBAAqBV,MAAM,GAAGC,KAAKU,gBAC5E,yBAAKF,UAAS,4BACd,yBAAKA,UAAS,mBAAsBG,wBAAyB,CAACC,OAAOL,EAAKE,qBAAqBV,MAAM,GAAGC,KAAKa,qDAAqDC,wBAAwBC,QAC1L,yBAAKP,UAAS,mBAAsBG,wBAAyB,CAACC,OAAOL,EAAKE,qBAAqBV,MAAM,GAAGC,KAAKgB,iDAAiDF,wBAAwBC,UAG1L,kBAAC,IAAD,S,y6CCMGE,IAxCE,WACb,IAAMlC,EAAS,OAwBTC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAzBpD,EA0BeJ,EAAUK,KAAKC,aAAaC,UAAtDC,EA1BW,EA0BXA,MAAOC,EA1BI,EA0BJA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACrDW,EAAYF,IAAYD,EAAkB,IAA/B,IAAyCC,EAAzC,IAEjB,OADEE,EAAWC,qBAAWD,GAEtB,kBAAC,IAAD,CACEA,SAAUA,EACVE,SAAUd,EAAUe,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDG,cAAeb","file":"component---src-pages-contact-de-js-6ad135fdd5c21c49ad8e.js","sourcesContent":["import {graphql, useStaticQuery, withPrefix} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\nimport {getCurrentLangKey} from \"ptz-i18n\";\n\nconst FooterDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n      query footerDe {\n        allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        allContentfulLegalNav(filter: {node_locale: {eq: \"de\"}}){\n          edges {\n            node {\n              navItems {\n                navItemText\n                navItemUrl\n              }\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title,\n            description,\n            languages {\n              defaultLangKey\n              langs\n            }\n          }\n        }\n      }\n    `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    let homeLink = (langKey === defaultLangKey) ? '/' : `/${langKey}/`;\n    homeLink = withPrefix(homeLink);\n\n  return (\n    <FooterLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    >\n    </FooterLayout>\n  );\n}\n\nexport default FooterDe\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {graphql, useStaticQuery} from \"gatsby\"\nimport HeaderDe from \"../components/header.de-DE\";\nimport FooterDe from \"../components/footer.de-DE\";\n\nconst Contact = ({ children, location }) => {\n    const data =useStaticQuery(graphql`\n        query ContactUsQueryDe {\n            allContentfulContact(filter: {node_locale: {eq: \"de\"}}) {\n            edges {\n              node {\n                contactHeading\n                childContentfulContactContactBodyContentRichTextNode {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n                childContentfulContactContactAddressRichTextNode {\n                  childContentfulRichText {\n                    html\n                  }\n                }\n              }\n            }\n          }\n        }\n      `);\n    return (\n        <div className={`main-container`}>\n            <HeaderDe/>\n            <article className={`content`}>\n                <main>{children}</main>\n                <h1 className={`contact__heading`}>{data.allContentfulContact.edges[0].node.contactHeading}</h1>\n                <div className={`contact__content-wrapper`}>\n                <div className={`contact__content`} dangerouslySetInnerHTML={{__html:data.allContentfulContact.edges[0].node.childContentfulContactContactBodyContentRichTextNode.childContentfulRichText.html}}/>\n                <div className={`contact__address`} dangerouslySetInnerHTML={{__html:data.allContentfulContact.edges[0].node.childContentfulContactContactAddressRichTextNode.childContentfulRichText.html}}/>\n                </div>\n            </article>\n            <FooterDe />\n        </div>\n    )\n}\n\nContact.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object,\n}\n\nexport default Contact;\n","import {graphql, useStaticQuery, withPrefix} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerDe {\n          allContentfulMainNav(filter: {node_locale: {eq: \"de\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    let homeLink = (langKey === defaultLangKey) ? '/' : `/${langKey}/`;\n    homeLink = withPrefix(homeLink);\n  return (\n    <HeaderLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    >\n    </HeaderLayout>\n  );\n}\n\nexport default HeaderDe\n"],"sourceRoot":""}