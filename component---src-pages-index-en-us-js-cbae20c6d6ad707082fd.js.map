{"version":3,"sources":["webpack:///./src/components/header.en-US.js","webpack:///./src/components/contacts_layout.js","webpack:///./src/components/clients_layout.js","webpack:///./src/components/roles_layout.js","webpack:///./src/components/layout.en-US.js","webpack:///./src/components/clients.en-US.js","webpack:///./src/components/contacts.en-US.js","webpack:///./src/pages/index.en-US.js","webpack:///./src/components/footer.en-US.js"],"names":["HeaderDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","navLinks","allContentfulMainNav","edges","node","navItems","switcherLinks","Clients","props","className","contactCopy","contactIntroductionTitle","contactIntroduction","json","content","map","item","key","value","style","backgroundImage","contactBackgroundImage","file","href","contactSectionHeading","name","id","officeLocations","city","region","tel","email","title","clientData","src","alt","Roles","rolesIntroContent","rolesTitle","rolesIntroduction","roles","role","uri","encodeURI","roleLink","roleTitle","image","roleImage","LayoutDe","children","allContentfulClientsModule","logos","Contact","allContentfulContactModule","allContentfulOfficeLocation","reverse","IndexPage","render","data","this","heroModule","allContentfulHeroModule","textModule","allContentfulModuleTextOnly","heroImage","module","headingParts","heroHeading","split","dangerouslySetInnerHTML","__html","childContentfulModuleTextOnlyContentRichTextNode","childContentfulRichText","html","componentDidMount","hash","setTimeout","decodeURI","replace","element","document","getElementById","scrollIntoView","React","Component","pageQuery","FooterUS","legalLinks","allContentfulLegalNav"],"mappings":"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","file":"component---src-pages-index-en-us-js-cbae20c6d6ad707082fd.js","sourcesContent":["import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerEn {\n          allContentfulMainNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    const homeLink = (langKey === defaultLangKey) ? '' : `/${langKey}/`;\n\n    return (\n      <HeaderLayout\n        homeLink={homeLink}\n        navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n        switcherLinks={langs}\n      >\n      </HeaderLayout>\n    );\n}\n\nexport default HeaderDe\n","import React from \"react\";\n\nconst Clients = (props) => (\n  <div>\n    <div className={\"module contact\"}>\n      <h2 className={\"module_heading\"}>{props.contactCopy.contactIntroductionTitle}</h2>\n      {props.contactCopy.contactIntroduction.json.content.map(item => {\n          return item.content.map(content => {\n            return (<p className=\"module_intro\" key={content.value}>{content.value}</p>)\n          })\n      })}\n    </div>\n    <div className=\"contact_locations\" style={{backgroundImage : `url('${props.contactCopy.contactBackgroundImage.file.url}')`}}>\n      <a \n        href={`#${props.contactCopy.contactSectionHeading}`} \n        className={\"inPageLink\"} \n        name={props.contactCopy.contactSectionHeading}\n        id={props.contactCopy.contactSectionHeading}>&nbsp;</a>\n      <h2 className=\"module_heading\">{props.contactCopy.contactSectionHeading}</h2>\n      <div className=\"contact_locationsContainers\">\n        {props.officeLocations.map(location => {\n          return (\n            <div className={\"contact_location\"} key={location.node.city}>\n              <h3 className=\"contact__region\">{location.node.region}</h3>\n              <h4 className=\"contact__city\">{location.node.city}</h4>\n              <a className=\"contact__tel\" href={`tel:${location.node.tel}`}>{location.node.tel}</a>\n              <a className=\"contact__email\" href=\"mailto:{location.node.email}\">{location.node.email}</a>\n              {/* <a href={location.node.link} className=\"btn btn--secondary\">\n                  {location.node.linkText}\n              </a> */}\n            </div>\n          )\n        })}\n      </div>\n  </div>\n</div>\n)\n\n\nexport default Clients\n","import React from \"react\";\n\nconst Clients = (props) => (\n  <div className={\"module client_container\"}>\n    <a href={`#${props.title}`} className={\"inPageLink\"} name={props.title} id={props.title} >&nbsp;</a>\n    <h2 className={\"module_heading\"}>{props.title}</h2>\n    <ul className={\"client_list\"}>\n        {props.clientData.map((item) => {\n        return (<li className={\"client_item\"} key={item.title}><img src={item.file.url} alt={item.title}/></li>)  \n        })}\n    </ul>\n  </div>\n)\n\n\nexport default Clients\n","import React from \"react\";\n\nconst Roles = (props) => (\n  <div>\n    <div className={\"module roles\"}>\n      <a \n        href={`#${props.rolesIntroContent.rolesTitle}`} \n        className={\"inPageLink\"} \n        name={props.rolesIntroContent.rolesTitle}\n        id={props.rolesIntroContent.rolesTitle}\n        >&nbsp;</a>\n      <h2 className={\"module_heading\"}>{props.rolesIntroContent.rolesTitle}</h2>\n      {props.rolesIntroContent.rolesIntroduction.json.content.map(item => {\n          return item.content.map(content => {\n            return (<p className=\"module_intro\" key={content.value}>{content.value}</p>)\n          })\n      })}\n    </div>\n    <div className=\"roleTypes\">\n      {props.roles.map(role => {\n        let uri = encodeURI(`${props.homeLink}${role.node.roleLink}`);\n        let key = `roleType_${role.node.roleTitle}`;\n        let image = \"\";\n        if(role.node.roleImage) {\n          image = role.node.roleImage.file.url;\n        }\n        return (\n          <a\n            style={{\n              backgroundImage : `url(${image})`\n            }}\n            key={key}\n            href={uri} \n            className={\"roleTypes_type\"}\n            >{role.node.roleTitle}</a>\n        )\n      })}\n  </div>\n</div>\n)\n\n\nexport default Roles\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport HeaderEn from \"./header.en-US\";\nimport Footer from \"./footer.en-US\";\n\nconst LayoutDe = ({ children, location }) => {\n  return (\n    <div className={`main-container`}>\n      <HeaderEn/>\n      <article className={`content`}>\n        <main>{children}</main>\n      </article>\n      <Footer />\n    </div>\n  )\n}\n\nLayoutDe.propTypes = {\n  children: PropTypes.node.isRequired,\n  location: PropTypes.object,\n}\n\nexport default LayoutDe\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\";\nimport ClientsLayout from \"./clients_layout\";\n\nconst Clients = (props) => {\n    const dataQuery = useStaticQuery(graphql`\n    query ClientsQueryUS {\n        allContentfulClientsModule(filter: {node_locale: {eq: \"en-US\"}}) {\n        edges {\n          node {\n            title\n            logos {\n                title\n                description\n                file {\n                    url\n                }\n            }\n          }\n        }\n      }\n    }\n    `);\n    return ( \n        <ClientsLayout clientData={dataQuery.allContentfulClientsModule.edges[0].node.logos} title={dataQuery.allContentfulClientsModule.edges[0].node.title}/>\n    );\n}\n\n\nexport default Clients\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\";\nimport ContactsLayout from \"./contacts_layout\";\n\nconst Contact = (props) => {\n    const dataQuery = useStaticQuery(graphql`\n    query ContactsQueryUS {\n        allContentfulContactModule(filter: {node_locale: {eq: \"en-US\"}}) {\n            edges {\n                node {\n                    contactIntroductionTitle\n                    contactIntroduction {\n                        json\n                    }\n                    contactSectionHeading\n                    contactBackgroundImage {\n                        title\n                        description\n                        file {\n                            url\n                        }\n                    }\n                }\n            }\n        }\n        allContentfulOfficeLocation(filter: {node_locale: {eq: \"en-US\"}}) {\n            edges {\n                node {\n                    region\n                    city\n                    tel\n                    email\n                    linkText\n                    link\n                }\n            }\n        }\n    }\n    `);\n\n    return (\n        <ContactsLayout \n            contactCopy={dataQuery.allContentfulContactModule.edges[0].node} \n            officeLocations={dataQuery.allContentfulOfficeLocation.edges.reverse()} \n        />\n    );\n}\n\n\nexport default Contact","import React from \"react\"\nimport LayoutEn from \"../components/layout.en-US\"\nimport SEO from \"../components/seo\"\nimport Clients from \"../components/clients.en-US\"\nimport Contacts from \"../components/contacts.en-US\"\nimport Roles from \"../components/roles.en-US\"\nimport \"../styles/index.scss\"\nimport {graphql} from \"gatsby\"\n\n\nclass IndexPage extends React.Component {\n  render() {\n    const { data } = this.props;\n    //const modules = data.allContentfulModuleTextandCta.edges;\n    const heroModule = data.allContentfulHeroModule.edges;\n    const textModule= data.allContentfulModuleTextOnly.edges[0];\n    return (\n      <LayoutEn location={this.props.location}>\n        <SEO \n          title=\"Home\"\n          image={heroModule[0].node.heroImage.file.url}\n        />\n        {heroModule.map((module) => {\n          const headingParts = module.node.heroHeading.split(/(?<=\\.)/);\n          return (\n            <div className={`hero__container`} key={`heading_${headingParts[1]}`}>\n              <img className={`hero__image`} src={`${module.node.heroImage.file.url}`} alt={``} />\n              <h1 className={`hero__title`}>{headingParts[0]}<span className=\"hero__lastLine\">{headingParts[1]}</span></h1>\n            </div>\n          )\n        })}\n        {\n          <div className={`simple-text-module`} dangerouslySetInnerHTML={{__html:textModule.node.childContentfulModuleTextOnlyContentRichTextNode.childContentfulRichText.html}}></div>\n        }\n        <Clients></Clients>\n        <Contacts></Contacts>\n        {/* <Roles></Roles> */}\n      </LayoutEn>\n    )\n  }\n  componentDidMount() {\n    const { hash } = window.location;\n    if (hash !== '') {\n      setTimeout(() => {\n        const id = decodeURI(hash.replace('#', ''));\n        const element = document.getElementById(id);\n        if (element) element.scrollIntoView();\n      }, 0);\n    }\n  }\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\nquery {\n  allContentfulModuleTextandCta(filter: {node_locale: {eq: \"en-US\"}}) {\n    edges {\n      node {\n        moduleTitle\n        moduleContent {\n          childContentfulRichText {\n           html\n          }\n        }\n        moduleCtAlink {\n          childContentfulRichText {\n            html\n          }\n        }\n      }\n    }\n  }\n  allContentfulHeroModule(filter: {node_locale: {eq: \"en-US\"}}) {\n    edges {\n      node {\n        heroHeading\n        heroImage {\n          file {\n            url\n          }\n        }\n      }\n    }\n  }\n  allContentfulModuleTextOnly(filter: {node_locale: {eq: \"en-US\"}}) {\n    edges {\n      node {\n        childContentfulModuleTextOnlyContentRichTextNode {\n          childContentfulRichText {\n            html\n          }\n        }\n      }\n    }\n  }\n}\n`","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\nimport {getCurrentLangKey} from \"ptz-i18n\";\n\nconst FooterUS = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query footerUS {\n          allContentfulMainNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          allContentfulLegalNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n            siteMetadata {\n              title,\n              description,\n              languages {\n                defaultLangKey\n                langs\n              }\n            }\n          }\n        }\n      `);\n      const url = typeof window !== 'undefined' ? window.location.pathname : '';\n      const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n      const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n      let homeLink = (langKey === defaultLangKey) ? '' : `/${langKey}/`;\n    return (\n      <FooterLayout\n            homeLink={homeLink}\n            navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n            legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n            switcherLinks={langs}\n      >\n      </FooterLayout>\n    );\n}\n\nexport default FooterUS\n"],"sourceRoot":""}