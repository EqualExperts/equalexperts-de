{"version":3,"sources":["webpack:///./src/components/header.en-US.js","webpack:///./src/pages/contact.en-US.js","webpack:///./src/components/footer.en-US.js"],"names":["HeaderDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","navLinks","allContentfulMainNav","edges","node","navItems","switcherLinks","Contact","children","data","className","allContentfulContact","contactHeading","dangerouslySetInnerHTML","__html","childContentfulContactContactBodyContentRichTextNode","childContentfulRichText","html","childContentfulContactContactAddressRichTextNode","FooterUS","legalLinks","allContentfulLegalNav"],"mappings":"0JA4CeA,IAvCE,WACf,IAAMC,EAAS,OAwBTC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAzBlD,EA0BaJ,EAAUK,KAAKC,aAAaC,UAAtDC,EA1Ba,EA0BbA,MAAOC,EA1BM,EA0BNA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACnDW,EAAWF,IAAYD,EAAiB,GAA7B,IAAsCC,EAAtC,IAEjB,OACE,kBAAC,IAAD,CACEE,SAAUA,EACVC,SAAUb,EAAUc,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDC,cAAeV,M,+4BC6BNW,UA7DC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SACXC,GADoC,EAAflB,SACjB,QAqBV,OACE,yBAAKmB,UAAS,kBACZ,kBAAC,IAAD,MACA,6BAASA,UAAS,WAChB,8BAAOF,GACP,wBAAIE,UAAS,oBACVD,EAAKE,qBAAqBR,MAAM,GAAGC,KAAKQ,gBAE3C,yBAAKF,UAAS,4BACZ,yBACEA,UAAS,mBACTG,wBAAyB,CACvBC,OACEL,EAAKE,qBAAqBR,MAAM,GAAGC,KAChCW,qDACAC,wBAAwBC,QAGjC,yBACEP,UAAS,mBACTG,wBAAyB,CACvBC,OACEL,EAAKE,qBAAqBR,MAAM,GAAGC,KAChCc,iDACAF,wBAAwBC,UAKrC,kBAAC,IAAD,S,uqCCJSE,IAjDE,WACf,IAAM/B,EAAS,OAkCTC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,SAAW,GAnClD,EAoCaJ,EAAUK,KAAKC,aAAaC,UAAtDC,EApCa,EAoCbA,MAAOC,EApCM,EAoCNA,eACTC,EAAUC,4BAAkBH,EAAOC,EAAgBR,GACrDW,EAAWF,IAAYD,EAAiB,GAA7B,IAAsCC,EAAtC,IACf,OACE,kBAAC,IAAD,CACEE,SAAUA,EACVC,SAAUb,EAAUc,qBAAqBC,MAAM,GAAGC,KAAKC,SACvDe,WAAYhC,EAAUiC,sBAAsBlB,MAAM,GAAGC,KAAKC,SAC1DC,cAAeV,M","file":"component---src-pages-contact-en-us-js-8082ad205fb7b5dfd06e.js","sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport { getCurrentLangKey } from \"ptz-i18n\"\nimport HeaderLayout from \"./header_layout\"\n\nconst HeaderDe = () => {\n  const dataQuery = useStaticQuery(graphql`\n    query headerEn {\n      allContentfulMainNav(filter: { node_locale: { eq: \"en-US\" } }) {\n        edges {\n          node {\n            navItems {\n              navItemText\n              navItemUrl\n            }\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          title\n          description\n          languages {\n            defaultLangKey\n            langs\n          }\n        }\n      }\n    }\n  `)\n  const url = typeof window !== \"undefined\" ? window.location.pathname : \"\"\n  const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages\n  const langKey = getCurrentLangKey(langs, defaultLangKey, url)\n  const homeLink = langKey === defaultLangKey ? \"\" : `/${langKey}/`\n\n  return (\n    <HeaderLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    ></HeaderLayout>\n  )\n}\n\nexport default HeaderDe\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport \"../styles/index.scss\"\nimport HeaderEn from \"../components/header.en-US\"\nimport FooterEn from \"../components/footer.en-US\"\n\nconst Contact = ({ children, location }) => {\n  const data = useStaticQuery(graphql`\n    query ContactUsQueryEn {\n      allContentfulContact(filter: { node_locale: { eq: \"en-US\" } }) {\n        edges {\n          node {\n            contactHeading\n            childContentfulContactContactBodyContentRichTextNode {\n              childContentfulRichText {\n                html\n              }\n            }\n            childContentfulContactContactAddressRichTextNode {\n              childContentfulRichText {\n                html\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <div className={`main-container`}>\n      <HeaderEn />\n      <article className={`content`}>\n        <main>{children}</main>\n        <h1 className={`contact__heading`}>\n          {data.allContentfulContact.edges[0].node.contactHeading}\n        </h1>\n        <div className={`contact__content-wrapper`}>\n          <div\n            className={`contact__content`}\n            dangerouslySetInnerHTML={{\n              __html:\n                data.allContentfulContact.edges[0].node\n                  .childContentfulContactContactBodyContentRichTextNode\n                  .childContentfulRichText.html,\n            }}\n          />\n          <div\n            className={`contact__address`}\n            dangerouslySetInnerHTML={{\n              __html:\n                data.allContentfulContact.edges[0].node\n                  .childContentfulContactContactAddressRichTextNode\n                  .childContentfulRichText.html,\n            }}\n          />\n        </div>\n      </article>\n      <FooterEn />\n    </div>\n  )\n}\n\nContact.propTypes = {\n  children: PropTypes.node,\n  location: PropTypes.object,\n}\n\nexport default Contact\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\"\nimport { getCurrentLangKey } from \"ptz-i18n\"\n\nconst FooterUS = () => {\n  const dataQuery = useStaticQuery(graphql`\n    query footerUS {\n      allContentfulMainNav(filter: { node_locale: { eq: \"en-US\" } }) {\n        edges {\n          node {\n            navItems {\n              navItemText\n              navItemUrl\n            }\n          }\n        }\n      }\n      allContentfulLegalNav(filter: { node_locale: { eq: \"en-US\" } }) {\n        edges {\n          node {\n            navItems {\n              navItemText\n              navItemUrl\n            }\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          title\n          description\n          languages {\n            defaultLangKey\n            langs\n          }\n        }\n      }\n    }\n  `)\n  const url = typeof window !== \"undefined\" ? window.location.pathname : \"\"\n  const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages\n  const langKey = getCurrentLangKey(langs, defaultLangKey, url)\n  let homeLink = langKey === defaultLangKey ? \"\" : `/${langKey}/`\n  return (\n    <FooterLayout\n      homeLink={homeLink}\n      navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n      legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n      switcherLinks={langs}\n    ></FooterLayout>\n  )\n}\n\nexport default FooterUS\n"],"sourceRoot":""}