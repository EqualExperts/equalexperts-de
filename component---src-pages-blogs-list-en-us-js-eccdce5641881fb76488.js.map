{"version":3,"sources":["webpack:///./src/components/header.en-US.js","webpack:///./src/components/articleList_layout.js","webpack:///./node_modules/core-js/modules/es7.string.pad-start.js","webpack:///./src/pages/blogs-list.en-US.js","webpack:///./node_modules/core-js/modules/_string-pad.js","webpack:///./src/components/footer.en-US.js","webpack:///./node_modules/core-js/modules/_string-repeat.js"],"names":["HeaderDe","dataQuery","url","window","location","pathname","site","siteMetadata","languages","langs","defaultLangKey","langKey","getCurrentLangKey","homeLink","navLinks","allContentfulMainNav","edges","node","navItems","switcherLinks","articleListLayout","props","className","title","articlesIntro","map","item","i","content","j","nodeType","key","value","articles","blog","date","Date","parse","blogDate","to","slug","blogTitle","getMonth","toString","padStart","getFullYear","blogAuthor","blogPostOverview","$export","$pad","userAgent","WEBKIT_BUG","test","P","F","maxLength","this","arguments","length","undefined","BlogListUS","children","data","blogPosts","allContentfulBlogPost","blogList","allContentfulBlogList","blogListTitle","childContentfulBlogListBlogListContentRichTextNode","json","toLength","repeat","defined","module","exports","that","fillString","left","S","String","stringLength","fillStr","intMaxLength","fillLen","stringFiller","call","Math","ceil","slice","FooterUS","legalLinks","allContentfulLegalNav","toInteger","count","str","res","n","Infinity","RangeError"],"mappings":"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","file":"component---src-pages-blogs-list-en-us-js-eccdce5641881fb76488.js","sourcesContent":["import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport {getCurrentLangKey} from \"ptz-i18n\";\nimport HeaderLayout from \"./header_layout\";\n\nconst HeaderDe = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query headerEn {\n          allContentfulMainNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n                siteMetadata {\n                  title,\n                  description,\n                  languages {\n                    defaultLangKey\n                    langs\n                  }\n                }\n          }\n        }\n      `);\n    const url = typeof window !== 'undefined' ? window.location.pathname : '';\n    const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n    const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n    const homeLink = (langKey === defaultLangKey) ? '' : `/${langKey}/`;\n\n    return (\n      <HeaderLayout\n        homeLink={homeLink}\n        navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n        switcherLinks={langs}\n      >\n      </HeaderLayout>\n    );\n}\n\nexport default HeaderDe\n","import React from \"react\"\nimport {Link} from \"gatsby\"\n\nconst articleListLayout = (props) => (\n  <div className={\"articlesList\"}>\n    <h2>{props.title}</h2>\n    {props.articlesIntro.map((item, i) => {\n      return item.content.map((content, j) => {\n        if(item.nodeType === \"paragraph\") {\n          return (<p key={`articlesList_IntroPara_${i}_${j}`}>{content.value}</p>);\n        }\n        return [];\n      });\n    })}\n    <ul className={`blogs__list`}>\n    {props.articles.map(blog => {\n        const date = new Date(Date.parse(blog.node.blogDate));\n        return (\n          <li key={`articlesList_${blog.node.blogDate}`}>\n            <article>\n              <Link to={`${props.homeLink}${blog.node.slug}`}>{blog.node.blogTitle}</Link>\n              <div className={'articlesList_metaData'}>\n                <span>{(date.getMonth() + 1).toString().padStart(2, \"0\")}/{date.getFullYear()}</span>\n                <span>- {blog.node.blogAuthor}</span>\n              </div>  \n              <p className={'articlesList_blogOverview'}>{blog.node.blogPostOverview.blogPostOverview}</p>\n            </article>\n          </li>\n        )\n      })}\n      </ul>\n  </div>\n)\n\n\nexport default articleListLayout\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","import React from \"react\"\nimport {useStaticQuery, graphql} from \"gatsby\"\nimport HeaderEn from \"../components/header.en-US\";\nimport ArticleList from \"../components/articleList_layout\";\nimport FooterUS from \"../components/footer.en-US\";\nimport {getCurrentLangKey} from \"ptz-i18n\";\n\nconst BlogListUS = ({ children, location }) => {\n  const data = useStaticQuery(graphql`\n  query BlogListEn {\n        allContentfulBlogPost(filter: {node_locale: {eq: \"en-US\"}}) {\n          edges {\n            node {\n              slug,\n              blogTitle,\n              blogAuthor,\n              blogDate,\n              blogPostOverview {\n                blogPostOverview\n              }\n            }\n          }\n        }\n        allContentfulBlogList(filter: {node_locale: {eq: \"en-US\"}}) {\n          edges {\n            node {\n              blogListTitle\n              childContentfulBlogListBlogListContentRichTextNode {\n                json\n              }\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title,\n            description,\n            languages {\n              defaultLangKey\n              langs\n            }\n          }\n        }\n      }\n  `)\n  const url = typeof window !== 'undefined' ? window.location.pathname : '';\n  const { langs, defaultLangKey } = data.site.siteMetadata.languages;\n  const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n  let homeLink = (langKey === defaultLangKey) ? '' : `/${langKey}/`;\n\n  const blogPosts =data.allContentfulBlogPost.edges;\n  const blogList = data.allContentfulBlogList.edges[0].node;\n    \n    return (\n        <div className={`main-container`}>\n            <HeaderEn />\n            <ArticleList\n              homeLink={homeLink}\n              title={blogList.blogListTitle}\n              articlesIntro={blogList.childContentfulBlogListBlogListContentRichTextNode.json.content}\n              articles={blogPosts}\n            />\n            <FooterUS />\n        </div>\n    )\n}\n\nexport default BlogListUS\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport React from \"react\"\nimport FooterLayout from \"./footer_layout\";\nimport {getCurrentLangKey} from \"ptz-i18n\";\n\nconst FooterUS = () => {\n    const dataQuery = useStaticQuery(graphql`\n        query footerUS {\n          allContentfulMainNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          allContentfulLegalNav(filter: {node_locale: {eq: \"en-US\"}}){\n            edges {\n              node {\n                navItems {\n                  navItemText\n                  navItemUrl\n                }\n              }\n            }\n          }\n          site {\n            siteMetadata {\n              title,\n              description,\n              languages {\n                defaultLangKey\n                langs\n              }\n            }\n          }\n        }\n      `);\n      const url = typeof window !== 'undefined' ? window.location.pathname : '';\n      const { langs, defaultLangKey } = dataQuery.site.siteMetadata.languages;\n      const langKey = getCurrentLangKey(langs, defaultLangKey, url);\n      let homeLink = (langKey === defaultLangKey) ? '' : `/${langKey}/`;\n    return (\n      <FooterLayout\n            homeLink={homeLink}\n            navLinks={dataQuery.allContentfulMainNav.edges[0].node.navItems}\n            legalLinks={dataQuery.allContentfulLegalNav.edges[0].node.navItems}\n            switcherLinks={langs}\n      >\n      </FooterLayout>\n    );\n}\n\nexport default FooterUS\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n"],"sourceRoot":""}